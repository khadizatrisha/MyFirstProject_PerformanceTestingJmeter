/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 440.0, "minX": 0.0, "maxY": 8412.0, "series": [{"data": [[0.0, 918.0], [0.1, 918.0], [0.2, 918.0], [0.3, 918.0], [0.4, 918.0], [0.5, 927.0], [0.6, 927.0], [0.7, 927.0], [0.8, 927.0], [0.9, 927.0], [1.0, 928.0], [1.1, 928.0], [1.2, 928.0], [1.3, 928.0], [1.4, 928.0], [1.5, 933.0], [1.6, 933.0], [1.7, 933.0], [1.8, 933.0], [1.9, 933.0], [2.0, 934.0], [2.1, 934.0], [2.2, 934.0], [2.3, 934.0], [2.4, 934.0], [2.5, 970.0], [2.6, 970.0], [2.7, 970.0], [2.8, 970.0], [2.9, 970.0], [3.0, 987.0], [3.1, 987.0], [3.2, 987.0], [3.3, 987.0], [3.4, 987.0], [3.5, 999.0], [3.6, 999.0], [3.7, 999.0], [3.8, 999.0], [3.9, 999.0], [4.0, 1029.0], [4.1, 1029.0], [4.2, 1029.0], [4.3, 1029.0], [4.4, 1029.0], [4.5, 1034.0], [4.6, 1034.0], [4.7, 1034.0], [4.8, 1034.0], [4.9, 1034.0], [5.0, 1036.0], [5.1, 1036.0], [5.2, 1036.0], [5.3, 1036.0], [5.4, 1036.0], [5.5, 1066.0], [5.6, 1066.0], [5.7, 1066.0], [5.8, 1066.0], [5.9, 1066.0], [6.0, 1155.0], [6.1, 1155.0], [6.2, 1155.0], [6.3, 1155.0], [6.4, 1155.0], [6.5, 1155.0], [6.6, 1155.0], [6.7, 1155.0], [6.8, 1155.0], [6.9, 1155.0], [7.0, 1158.0], [7.1, 1158.0], [7.2, 1158.0], [7.3, 1158.0], [7.4, 1158.0], [7.5, 1164.0], [7.6, 1164.0], [7.7, 1164.0], [7.8, 1164.0], [7.9, 1164.0], [8.0, 1202.0], [8.1, 1202.0], [8.2, 1202.0], [8.3, 1202.0], [8.4, 1202.0], [8.5, 1205.0], [8.6, 1205.0], [8.7, 1205.0], [8.8, 1205.0], [8.9, 1205.0], [9.0, 1207.0], [9.1, 1207.0], [9.2, 1207.0], [9.3, 1207.0], [9.4, 1207.0], [9.5, 1212.0], [9.6, 1212.0], [9.7, 1212.0], [9.8, 1212.0], [9.9, 1212.0], [10.0, 1224.0], [10.1, 1224.0], [10.2, 1224.0], [10.3, 1224.0], [10.4, 1224.0], [10.5, 1226.0], [10.6, 1226.0], [10.7, 1226.0], [10.8, 1226.0], [10.9, 1226.0], [11.0, 1229.0], [11.1, 1229.0], [11.2, 1229.0], [11.3, 1229.0], [11.4, 1229.0], [11.5, 1229.0], [11.6, 1229.0], [11.7, 1229.0], [11.8, 1229.0], [11.9, 1229.0], [12.0, 1243.0], [12.1, 1243.0], [12.2, 1243.0], [12.3, 1243.0], [12.4, 1243.0], [12.5, 1249.0], [12.6, 1249.0], [12.7, 1249.0], [12.8, 1249.0], [12.9, 1249.0], [13.0, 1253.0], [13.1, 1253.0], [13.2, 1253.0], [13.3, 1253.0], [13.4, 1253.0], [13.5, 1258.0], [13.6, 1258.0], [13.7, 1258.0], [13.8, 1258.0], [13.9, 1258.0], [14.0, 1261.0], [14.1, 1261.0], [14.2, 1261.0], [14.3, 1261.0], [14.4, 1261.0], [14.5, 1265.0], [14.6, 1265.0], [14.7, 1265.0], [14.8, 1265.0], [14.9, 1265.0], [15.0, 1268.0], [15.1, 1268.0], [15.2, 1268.0], [15.3, 1268.0], [15.4, 1268.0], [15.5, 1269.0], [15.6, 1269.0], [15.7, 1269.0], [15.8, 1269.0], [15.9, 1269.0], [16.0, 1277.0], [16.1, 1277.0], [16.2, 1277.0], [16.3, 1277.0], [16.4, 1277.0], [16.5, 1280.0], [16.6, 1280.0], [16.7, 1280.0], [16.8, 1280.0], [16.9, 1280.0], [17.0, 1283.0], [17.1, 1283.0], [17.2, 1283.0], [17.3, 1283.0], [17.4, 1283.0], [17.5, 1285.0], [17.6, 1285.0], [17.7, 1285.0], [17.8, 1285.0], [17.9, 1285.0], [18.0, 1286.0], [18.1, 1286.0], [18.2, 1286.0], [18.3, 1286.0], [18.4, 1286.0], [18.5, 1324.0], [18.6, 1324.0], [18.7, 1324.0], [18.8, 1324.0], [18.9, 1324.0], [19.0, 1337.0], [19.1, 1337.0], [19.2, 1337.0], [19.3, 1337.0], [19.4, 1337.0], [19.5, 1374.0], [19.6, 1374.0], [19.7, 1374.0], [19.8, 1374.0], [19.9, 1374.0], [20.0, 1377.0], [20.1, 1377.0], [20.2, 1377.0], [20.3, 1377.0], [20.4, 1377.0], [20.5, 1481.0], [20.6, 1481.0], [20.7, 1481.0], [20.8, 1481.0], [20.9, 1481.0], [21.0, 1500.0], [21.1, 1500.0], [21.2, 1500.0], [21.3, 1500.0], [21.4, 1500.0], [21.5, 1697.0], [21.6, 1697.0], [21.7, 1697.0], [21.8, 1697.0], [21.9, 1697.0], [22.0, 1750.0], [22.1, 1750.0], [22.2, 1750.0], [22.3, 1750.0], [22.4, 1750.0], [22.5, 1751.0], [22.6, 1751.0], [22.7, 1751.0], [22.8, 1751.0], [22.9, 1751.0], [23.0, 1752.0], [23.1, 1752.0], [23.2, 1752.0], [23.3, 1752.0], [23.4, 1752.0], [23.5, 1755.0], [23.6, 1755.0], [23.7, 1755.0], [23.8, 1755.0], [23.9, 1755.0], [24.0, 1758.0], [24.1, 1758.0], [24.2, 1758.0], [24.3, 1758.0], [24.4, 1758.0], [24.5, 1759.0], [24.6, 1759.0], [24.7, 1759.0], [24.8, 1759.0], [24.9, 1759.0], [25.0, 1760.0], [25.1, 1760.0], [25.2, 1760.0], [25.3, 1760.0], [25.4, 1760.0], [25.5, 1763.0], [25.6, 1763.0], [25.7, 1763.0], [25.8, 1763.0], [25.9, 1763.0], [26.0, 1775.0], [26.1, 1775.0], [26.2, 1775.0], [26.3, 1775.0], [26.4, 1775.0], [26.5, 1787.0], [26.6, 1787.0], [26.7, 1787.0], [26.8, 1787.0], [26.9, 1787.0], [27.0, 1791.0], [27.1, 1791.0], [27.2, 1791.0], [27.3, 1791.0], [27.4, 1791.0], [27.5, 1832.0], [27.6, 1832.0], [27.7, 1832.0], [27.8, 1832.0], [27.9, 1832.0], [28.0, 1882.0], [28.1, 1882.0], [28.2, 1882.0], [28.3, 1882.0], [28.4, 1882.0], [28.5, 1885.0], [28.6, 1885.0], [28.7, 1885.0], [28.8, 1885.0], [28.9, 1885.0], [29.0, 1889.0], [29.1, 1889.0], [29.2, 1889.0], [29.3, 1889.0], [29.4, 1889.0], [29.5, 1973.0], [29.6, 1973.0], [29.7, 1973.0], [29.8, 1973.0], [29.9, 1973.0], [30.0, 1988.0], [30.1, 1988.0], [30.2, 1988.0], [30.3, 1988.0], [30.4, 1988.0], [30.5, 1988.0], [30.6, 1988.0], [30.7, 1988.0], [30.8, 1988.0], [30.9, 1988.0], [31.0, 1993.0], [31.1, 1993.0], [31.2, 1993.0], [31.3, 1993.0], [31.4, 1993.0], [31.5, 2001.0], [31.6, 2001.0], [31.7, 2001.0], [31.8, 2001.0], [31.9, 2001.0], [32.0, 2009.0], [32.1, 2009.0], [32.2, 2009.0], [32.3, 2009.0], [32.4, 2009.0], [32.5, 2011.0], [32.6, 2011.0], [32.7, 2011.0], [32.8, 2011.0], [32.9, 2011.0], [33.0, 2013.0], [33.1, 2013.0], [33.2, 2013.0], [33.3, 2013.0], [33.4, 2013.0], [33.5, 2033.0], [33.6, 2033.0], [33.7, 2033.0], [33.8, 2033.0], [33.9, 2033.0], [34.0, 2041.0], [34.1, 2041.0], [34.2, 2041.0], [34.3, 2041.0], [34.4, 2041.0], [34.5, 2045.0], [34.6, 2045.0], [34.7, 2045.0], [34.8, 2045.0], [34.9, 2045.0], [35.0, 2065.0], [35.1, 2065.0], [35.2, 2065.0], [35.3, 2065.0], [35.4, 2065.0], [35.5, 2074.0], [35.6, 2074.0], [35.7, 2074.0], [35.8, 2074.0], [35.9, 2074.0], [36.0, 2076.0], [36.1, 2076.0], [36.2, 2076.0], [36.3, 2076.0], [36.4, 2076.0], [36.5, 2078.0], [36.6, 2078.0], [36.7, 2078.0], [36.8, 2078.0], [36.9, 2078.0], [37.0, 2088.0], [37.1, 2088.0], [37.2, 2088.0], [37.3, 2088.0], [37.4, 2088.0], [37.5, 2095.0], [37.6, 2095.0], [37.7, 2095.0], [37.8, 2095.0], [37.9, 2095.0], [38.0, 2096.0], [38.1, 2096.0], [38.2, 2096.0], [38.3, 2096.0], [38.4, 2096.0], [38.5, 2098.0], [38.6, 2098.0], [38.7, 2098.0], [38.8, 2098.0], [38.9, 2098.0], [39.0, 2104.0], [39.1, 2104.0], [39.2, 2104.0], [39.3, 2104.0], [39.4, 2104.0], [39.5, 2122.0], [39.6, 2122.0], [39.7, 2122.0], [39.8, 2122.0], [39.9, 2122.0], [40.0, 2123.0], [40.1, 2123.0], [40.2, 2123.0], [40.3, 2123.0], [40.4, 2123.0], [40.5, 2123.0], [40.6, 2123.0], [40.7, 2123.0], [40.8, 2123.0], [40.9, 2123.0], [41.0, 2128.0], [41.1, 2128.0], [41.2, 2128.0], [41.3, 2128.0], [41.4, 2128.0], [41.5, 2129.0], [41.6, 2129.0], [41.7, 2129.0], [41.8, 2129.0], [41.9, 2129.0], [42.0, 2154.0], [42.1, 2154.0], [42.2, 2154.0], [42.3, 2154.0], [42.4, 2154.0], [42.5, 2174.0], [42.6, 2174.0], [42.7, 2174.0], [42.8, 2174.0], [42.9, 2174.0], [43.0, 2944.0], [43.1, 2944.0], [43.2, 2944.0], [43.3, 2944.0], [43.4, 2944.0], [43.5, 2991.0], [43.6, 2991.0], [43.7, 2991.0], [43.8, 2991.0], [43.9, 2991.0], [44.0, 3296.0], [44.1, 3296.0], [44.2, 3296.0], [44.3, 3296.0], [44.4, 3296.0], [44.5, 3309.0], [44.6, 3309.0], [44.7, 3309.0], [44.8, 3309.0], [44.9, 3309.0], [45.0, 3321.0], [45.1, 3321.0], [45.2, 3321.0], [45.3, 3321.0], [45.4, 3321.0], [45.5, 3514.0], [45.6, 3514.0], [45.7, 3514.0], [45.8, 3514.0], [45.9, 3514.0], [46.0, 3596.0], [46.1, 3596.0], [46.2, 3596.0], [46.3, 3596.0], [46.4, 3596.0], [46.5, 3667.0], [46.6, 3667.0], [46.7, 3667.0], [46.8, 3667.0], [46.9, 3667.0], [47.0, 3769.0], [47.1, 3769.0], [47.2, 3769.0], [47.3, 3769.0], [47.4, 3769.0], [47.5, 3802.0], [47.6, 3802.0], [47.7, 3802.0], [47.8, 3802.0], [47.9, 3802.0], [48.0, 3828.0], [48.1, 3828.0], [48.2, 3828.0], [48.3, 3828.0], [48.4, 3828.0], [48.5, 3883.0], [48.6, 3883.0], [48.7, 3883.0], [48.8, 3883.0], [48.9, 3883.0], [49.0, 3908.0], [49.1, 3908.0], [49.2, 3908.0], [49.3, 3908.0], [49.4, 3908.0], [49.5, 3946.0], [49.6, 3946.0], [49.7, 3946.0], [49.8, 3946.0], [49.9, 3946.0], [50.0, 4004.0], [50.1, 4004.0], [50.2, 4004.0], [50.3, 4004.0], [50.4, 4004.0], [50.5, 4036.0], [50.6, 4036.0], [50.7, 4036.0], [50.8, 4036.0], [50.9, 4036.0], [51.0, 4091.0], [51.1, 4091.0], [51.2, 4091.0], [51.3, 4091.0], [51.4, 4091.0], [51.5, 4109.0], [51.6, 4109.0], [51.7, 4109.0], [51.8, 4109.0], [51.9, 4109.0], [52.0, 4117.0], [52.1, 4117.0], [52.2, 4117.0], [52.3, 4117.0], [52.4, 4117.0], [52.5, 4142.0], [52.6, 4142.0], [52.7, 4142.0], [52.8, 4142.0], [52.9, 4142.0], [53.0, 4143.0], [53.1, 4143.0], [53.2, 4143.0], [53.3, 4143.0], [53.4, 4143.0], [53.5, 4159.0], [53.6, 4159.0], [53.7, 4159.0], [53.8, 4159.0], [53.9, 4159.0], [54.0, 4176.0], [54.1, 4176.0], [54.2, 4176.0], [54.3, 4176.0], [54.4, 4176.0], [54.5, 4181.0], [54.6, 4181.0], [54.7, 4181.0], [54.8, 4181.0], [54.9, 4181.0], [55.0, 4293.0], [55.1, 4293.0], [55.2, 4293.0], [55.3, 4293.0], [55.4, 4293.0], [55.5, 4368.0], [55.6, 4368.0], [55.7, 4368.0], [55.8, 4368.0], [55.9, 4368.0], [56.0, 4467.0], [56.1, 4467.0], [56.2, 4467.0], [56.3, 4467.0], [56.4, 4467.0], [56.5, 4483.0], [56.6, 4483.0], [56.7, 4483.0], [56.8, 4483.0], [56.9, 4483.0], [57.0, 4490.0], [57.1, 4490.0], [57.2, 4490.0], [57.3, 4490.0], [57.4, 4490.0], [57.5, 4530.0], [57.6, 4530.0], [57.7, 4530.0], [57.8, 4530.0], [57.9, 4530.0], [58.0, 4552.0], [58.1, 4552.0], [58.2, 4552.0], [58.3, 4552.0], [58.4, 4552.0], [58.5, 4642.0], [58.6, 4642.0], [58.7, 4642.0], [58.8, 4642.0], [58.9, 4642.0], [59.0, 4673.0], [59.1, 4673.0], [59.2, 4673.0], [59.3, 4673.0], [59.4, 4673.0], [59.5, 4685.0], [59.6, 4685.0], [59.7, 4685.0], [59.8, 4685.0], [59.9, 4685.0], [60.0, 4741.0], [60.1, 4741.0], [60.2, 4741.0], [60.3, 4741.0], [60.4, 4741.0], [60.5, 4790.0], [60.6, 4790.0], [60.7, 4790.0], [60.8, 4790.0], [60.9, 4790.0], [61.0, 4804.0], [61.1, 4804.0], [61.2, 4804.0], [61.3, 4804.0], [61.4, 4804.0], [61.5, 4847.0], [61.6, 4847.0], [61.7, 4847.0], [61.8, 4847.0], [61.9, 4847.0], [62.0, 4912.0], [62.1, 4912.0], [62.2, 4912.0], [62.3, 4912.0], [62.4, 4912.0], [62.5, 4942.0], [62.6, 4942.0], [62.7, 4942.0], [62.8, 4942.0], [62.9, 4942.0], [63.0, 4966.0], [63.1, 4966.0], [63.2, 4966.0], [63.3, 4966.0], [63.4, 4966.0], [63.5, 5045.0], [63.6, 5045.0], [63.7, 5045.0], [63.8, 5045.0], [63.9, 5045.0], [64.0, 5095.0], [64.1, 5095.0], [64.2, 5095.0], [64.3, 5095.0], [64.4, 5095.0], [64.5, 5166.0], [64.6, 5166.0], [64.7, 5166.0], [64.8, 5166.0], [64.9, 5166.0], [65.0, 5251.0], [65.1, 5251.0], [65.2, 5251.0], [65.3, 5251.0], [65.4, 5251.0], [65.5, 5278.0], [65.6, 5278.0], [65.7, 5278.0], [65.8, 5278.0], [65.9, 5278.0], [66.0, 5349.0], [66.1, 5349.0], [66.2, 5349.0], [66.3, 5349.0], [66.4, 5349.0], [66.5, 5365.0], [66.6, 5365.0], [66.7, 5365.0], [66.8, 5365.0], [66.9, 5365.0], [67.0, 5397.0], [67.1, 5397.0], [67.2, 5397.0], [67.3, 5397.0], [67.4, 5397.0], [67.5, 5538.0], [67.6, 5538.0], [67.7, 5538.0], [67.8, 5538.0], [67.9, 5538.0], [68.0, 5575.0], [68.1, 5575.0], [68.2, 5575.0], [68.3, 5575.0], [68.4, 5575.0], [68.5, 5610.0], [68.6, 5610.0], [68.7, 5610.0], [68.8, 5610.0], [68.9, 5610.0], [69.0, 5680.0], [69.1, 5680.0], [69.2, 5680.0], [69.3, 5680.0], [69.4, 5680.0], [69.5, 5775.0], [69.6, 5775.0], [69.7, 5775.0], [69.8, 5775.0], [69.9, 5775.0], [70.0, 5784.0], [70.1, 5784.0], [70.2, 5784.0], [70.3, 5784.0], [70.4, 5784.0], [70.5, 5827.0], [70.6, 5827.0], [70.7, 5827.0], [70.8, 5827.0], [70.9, 5827.0], [71.0, 5905.0], [71.1, 5905.0], [71.2, 5905.0], [71.3, 5905.0], [71.4, 5905.0], [71.5, 5909.0], [71.6, 5909.0], [71.7, 5909.0], [71.8, 5909.0], [71.9, 5909.0], [72.0, 5928.0], [72.1, 5928.0], [72.2, 5928.0], [72.3, 5928.0], [72.4, 5928.0], [72.5, 5935.0], [72.6, 5935.0], [72.7, 5935.0], [72.8, 5935.0], [72.9, 5935.0], [73.0, 5967.0], [73.1, 5967.0], [73.2, 5967.0], [73.3, 5967.0], [73.4, 5967.0], [73.5, 6051.0], [73.6, 6051.0], [73.7, 6051.0], [73.8, 6051.0], [73.9, 6051.0], [74.0, 6064.0], [74.1, 6064.0], [74.2, 6064.0], [74.3, 6064.0], [74.4, 6064.0], [74.5, 6148.0], [74.6, 6148.0], [74.7, 6148.0], [74.8, 6148.0], [74.9, 6148.0], [75.0, 6174.0], [75.1, 6174.0], [75.2, 6174.0], [75.3, 6174.0], [75.4, 6174.0], [75.5, 6269.0], [75.6, 6269.0], [75.7, 6269.0], [75.8, 6269.0], [75.9, 6269.0], [76.0, 6282.0], [76.1, 6282.0], [76.2, 6282.0], [76.3, 6282.0], [76.4, 6282.0], [76.5, 6302.0], [76.6, 6302.0], [76.7, 6302.0], [76.8, 6302.0], [76.9, 6302.0], [77.0, 6377.0], [77.1, 6377.0], [77.2, 6377.0], [77.3, 6377.0], [77.4, 6377.0], [77.5, 6403.0], [77.6, 6403.0], [77.7, 6403.0], [77.8, 6403.0], [77.9, 6403.0], [78.0, 6425.0], [78.1, 6425.0], [78.2, 6425.0], [78.3, 6425.0], [78.4, 6425.0], [78.5, 6503.0], [78.6, 6503.0], [78.7, 6503.0], [78.8, 6503.0], [78.9, 6503.0], [79.0, 6575.0], [79.1, 6575.0], [79.2, 6575.0], [79.3, 6575.0], [79.4, 6575.0], [79.5, 6627.0], [79.6, 6627.0], [79.7, 6627.0], [79.8, 6627.0], [79.9, 6627.0], [80.0, 6652.0], [80.1, 6652.0], [80.2, 6652.0], [80.3, 6652.0], [80.4, 6652.0], [80.5, 6674.0], [80.6, 6674.0], [80.7, 6674.0], [80.8, 6674.0], [80.9, 6674.0], [81.0, 6703.0], [81.1, 6703.0], [81.2, 6703.0], [81.3, 6703.0], [81.4, 6703.0], [81.5, 6764.0], [81.6, 6764.0], [81.7, 6764.0], [81.8, 6764.0], [81.9, 6764.0], [82.0, 6794.0], [82.1, 6794.0], [82.2, 6794.0], [82.3, 6794.0], [82.4, 6794.0], [82.5, 6807.0], [82.6, 6807.0], [82.7, 6807.0], [82.8, 6807.0], [82.9, 6807.0], [83.0, 6865.0], [83.1, 6865.0], [83.2, 6865.0], [83.3, 6865.0], [83.4, 6865.0], [83.5, 7004.0], [83.6, 7004.0], [83.7, 7004.0], [83.8, 7004.0], [83.9, 7004.0], [84.0, 7053.0], [84.1, 7053.0], [84.2, 7053.0], [84.3, 7053.0], [84.4, 7053.0], [84.5, 7173.0], [84.6, 7173.0], [84.7, 7173.0], [84.8, 7173.0], [84.9, 7173.0], [85.0, 7181.0], [85.1, 7181.0], [85.2, 7181.0], [85.3, 7181.0], [85.4, 7181.0], [85.5, 7278.0], [85.6, 7278.0], [85.7, 7278.0], [85.8, 7278.0], [85.9, 7278.0], [86.0, 7299.0], [86.1, 7299.0], [86.2, 7299.0], [86.3, 7299.0], [86.4, 7299.0], [86.5, 7394.0], [86.6, 7394.0], [86.7, 7394.0], [86.8, 7394.0], [86.9, 7394.0], [87.0, 7410.0], [87.1, 7410.0], [87.2, 7410.0], [87.3, 7410.0], [87.4, 7410.0], [87.5, 7421.0], [87.6, 7421.0], [87.7, 7421.0], [87.8, 7421.0], [87.9, 7421.0], [88.0, 7462.0], [88.1, 7462.0], [88.2, 7462.0], [88.3, 7462.0], [88.4, 7462.0], [88.5, 7502.0], [88.6, 7502.0], [88.7, 7502.0], [88.8, 7502.0], [88.9, 7502.0], [89.0, 7511.0], [89.1, 7511.0], [89.2, 7511.0], [89.3, 7511.0], [89.4, 7511.0], [89.5, 7512.0], [89.6, 7512.0], [89.7, 7512.0], [89.8, 7512.0], [89.9, 7512.0], [90.0, 7603.0], [90.1, 7603.0], [90.2, 7603.0], [90.3, 7603.0], [90.4, 7603.0], [90.5, 7612.0], [90.6, 7612.0], [90.7, 7612.0], [90.8, 7612.0], [90.9, 7612.0], [91.0, 7613.0], [91.1, 7613.0], [91.2, 7613.0], [91.3, 7613.0], [91.4, 7613.0], [91.5, 7616.0], [91.6, 7616.0], [91.7, 7616.0], [91.8, 7616.0], [91.9, 7616.0], [92.0, 7622.0], [92.1, 7622.0], [92.2, 7622.0], [92.3, 7622.0], [92.4, 7622.0], [92.5, 7623.0], [92.6, 7623.0], [92.7, 7623.0], [92.8, 7623.0], [92.9, 7623.0], [93.0, 7628.0], [93.1, 7628.0], [93.2, 7628.0], [93.3, 7628.0], [93.4, 7628.0], [93.5, 7629.0], [93.6, 7629.0], [93.7, 7629.0], [93.8, 7629.0], [93.9, 7629.0], [94.0, 7630.0], [94.1, 7630.0], [94.2, 7630.0], [94.3, 7630.0], [94.4, 7630.0], [94.5, 7888.0], [94.6, 7888.0], [94.7, 7888.0], [94.8, 7888.0], [94.9, 7888.0], [95.0, 7962.0], [95.1, 7962.0], [95.2, 7962.0], [95.3, 7962.0], [95.4, 7962.0], [95.5, 7988.0], [95.6, 7988.0], [95.7, 7988.0], [95.8, 7988.0], [95.9, 7988.0], [96.0, 8017.0], [96.1, 8017.0], [96.2, 8017.0], [96.3, 8017.0], [96.4, 8017.0], [96.5, 8023.0], [96.6, 8023.0], [96.7, 8023.0], [96.8, 8023.0], [96.9, 8023.0], [97.0, 8094.0], [97.1, 8094.0], [97.2, 8094.0], [97.3, 8094.0], [97.4, 8094.0], [97.5, 8147.0], [97.6, 8147.0], [97.7, 8147.0], [97.8, 8147.0], [97.9, 8147.0], [98.0, 8177.0], [98.1, 8177.0], [98.2, 8177.0], [98.3, 8177.0], [98.4, 8177.0], [98.5, 8261.0], [98.6, 8261.0], [98.7, 8261.0], [98.8, 8261.0], [98.9, 8261.0], [99.0, 8330.0], [99.1, 8330.0], [99.2, 8330.0], [99.3, 8330.0], [99.4, 8330.0], [99.5, 8412.0], [99.6, 8412.0], [99.7, 8412.0], [99.8, 8412.0], [99.9, 8412.0]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[0.0, 440.0], [0.1, 440.0], [0.2, 440.0], [0.3, 440.0], [0.4, 440.0], [0.5, 454.0], [0.6, 454.0], [0.7, 454.0], [0.8, 454.0], [0.9, 454.0], [1.0, 456.0], [1.1, 456.0], [1.2, 456.0], [1.3, 456.0], [1.4, 456.0], [1.5, 458.0], [1.6, 458.0], [1.7, 458.0], [1.8, 458.0], [1.9, 458.0], [2.0, 460.0], [2.1, 460.0], [2.2, 460.0], [2.3, 460.0], [2.4, 460.0], [2.5, 462.0], [2.6, 462.0], [2.7, 462.0], [2.8, 462.0], [2.9, 462.0], [3.0, 462.0], [3.1, 462.0], [3.2, 462.0], [3.3, 462.0], [3.4, 462.0], [3.5, 492.0], [3.6, 492.0], [3.7, 492.0], [3.8, 492.0], [3.9, 492.0], [4.0, 502.0], [4.1, 502.0], [4.2, 502.0], [4.3, 502.0], [4.4, 502.0], [4.5, 503.0], [4.6, 503.0], [4.7, 503.0], [4.8, 503.0], [4.9, 503.0], [5.0, 504.0], [5.1, 504.0], [5.2, 504.0], [5.3, 504.0], [5.4, 504.0], [5.5, 505.0], [5.6, 505.0], [5.7, 505.0], [5.8, 505.0], [5.9, 505.0], [6.0, 510.0], [6.1, 510.0], [6.2, 510.0], [6.3, 510.0], [6.4, 510.0], [6.5, 510.0], [6.6, 510.0], [6.7, 510.0], [6.8, 510.0], [6.9, 510.0], [7.0, 511.0], [7.1, 511.0], [7.2, 511.0], [7.3, 511.0], [7.4, 511.0], [7.5, 512.0], [7.6, 512.0], [7.7, 512.0], [7.8, 512.0], [7.9, 512.0], [8.0, 513.0], [8.1, 513.0], [8.2, 513.0], [8.3, 513.0], [8.4, 513.0], [8.5, 516.0], [8.6, 516.0], [8.7, 516.0], [8.8, 516.0], [8.9, 516.0], [9.0, 516.0], [9.1, 516.0], [9.2, 516.0], [9.3, 516.0], [9.4, 516.0], [9.5, 518.0], [9.6, 518.0], [9.7, 518.0], [9.8, 518.0], [9.9, 518.0], [10.0, 520.0], [10.1, 520.0], [10.2, 520.0], [10.3, 520.0], [10.4, 520.0], [10.5, 521.0], [10.6, 521.0], [10.7, 521.0], [10.8, 521.0], [10.9, 521.0], [11.0, 522.0], [11.1, 522.0], [11.2, 522.0], [11.3, 522.0], [11.4, 522.0], [11.5, 523.0], [11.6, 523.0], [11.7, 523.0], [11.8, 523.0], [11.9, 523.0], [12.0, 525.0], [12.1, 525.0], [12.2, 525.0], [12.3, 525.0], [12.4, 525.0], [12.5, 525.0], [12.6, 525.0], [12.7, 525.0], [12.8, 525.0], [12.9, 525.0], [13.0, 525.0], [13.1, 525.0], [13.2, 525.0], [13.3, 525.0], [13.4, 525.0], [13.5, 527.0], [13.6, 527.0], [13.7, 527.0], [13.8, 527.0], [13.9, 527.0], [14.0, 528.0], [14.1, 528.0], [14.2, 528.0], [14.3, 528.0], [14.4, 528.0], [14.5, 529.0], [14.6, 529.0], [14.7, 529.0], [14.8, 529.0], [14.9, 529.0], [15.0, 531.0], [15.1, 531.0], [15.2, 531.0], [15.3, 531.0], [15.4, 531.0], [15.5, 536.0], [15.6, 536.0], [15.7, 536.0], [15.8, 536.0], [15.9, 536.0], [16.0, 542.0], [16.1, 542.0], [16.2, 542.0], [16.3, 542.0], [16.4, 542.0], [16.5, 543.0], [16.6, 543.0], [16.7, 543.0], [16.8, 543.0], [16.9, 543.0], [17.0, 544.0], [17.1, 544.0], [17.2, 544.0], [17.3, 544.0], [17.4, 544.0], [17.5, 545.0], [17.6, 545.0], [17.7, 545.0], [17.8, 545.0], [17.9, 545.0], [18.0, 545.0], [18.1, 545.0], [18.2, 545.0], [18.3, 545.0], [18.4, 545.0], [18.5, 551.0], [18.6, 551.0], [18.7, 551.0], [18.8, 551.0], [18.9, 551.0], [19.0, 552.0], [19.1, 552.0], [19.2, 552.0], [19.3, 552.0], [19.4, 552.0], [19.5, 554.0], [19.6, 554.0], [19.7, 554.0], [19.8, 554.0], [19.9, 554.0], [20.0, 555.0], [20.1, 555.0], [20.2, 555.0], [20.3, 555.0], [20.4, 555.0], [20.5, 557.0], [20.6, 557.0], [20.7, 557.0], [20.8, 557.0], [20.9, 557.0], [21.0, 558.0], [21.1, 558.0], [21.2, 558.0], [21.3, 558.0], [21.4, 558.0], [21.5, 563.0], [21.6, 563.0], [21.7, 563.0], [21.8, 563.0], [21.9, 563.0], [22.0, 564.0], [22.1, 564.0], [22.2, 564.0], [22.3, 564.0], [22.4, 564.0], [22.5, 565.0], [22.6, 565.0], [22.7, 565.0], [22.8, 565.0], [22.9, 565.0], [23.0, 565.0], [23.1, 565.0], [23.2, 565.0], [23.3, 565.0], [23.4, 565.0], [23.5, 571.0], [23.6, 571.0], [23.7, 571.0], [23.8, 571.0], [23.9, 571.0], [24.0, 581.0], [24.1, 581.0], [24.2, 581.0], [24.3, 581.0], [24.4, 581.0], [24.5, 590.0], [24.6, 590.0], [24.7, 590.0], [24.8, 590.0], [24.9, 590.0], [25.0, 594.0], [25.1, 594.0], [25.2, 594.0], [25.3, 594.0], [25.4, 594.0], [25.5, 595.0], [25.6, 595.0], [25.7, 595.0], [25.8, 595.0], [25.9, 595.0], [26.0, 597.0], [26.1, 597.0], [26.2, 597.0], [26.3, 597.0], [26.4, 597.0], [26.5, 597.0], [26.6, 597.0], [26.7, 597.0], [26.8, 597.0], [26.9, 597.0], [27.0, 597.0], [27.1, 597.0], [27.2, 597.0], [27.3, 597.0], [27.4, 597.0], [27.5, 598.0], [27.6, 598.0], [27.7, 598.0], [27.8, 598.0], [27.9, 598.0], [28.0, 600.0], [28.1, 600.0], [28.2, 600.0], [28.3, 600.0], [28.4, 600.0], [28.5, 600.0], [28.6, 600.0], [28.7, 600.0], [28.8, 600.0], [28.9, 600.0], [29.0, 601.0], [29.1, 601.0], [29.2, 601.0], [29.3, 601.0], [29.4, 601.0], [29.5, 602.0], [29.6, 602.0], [29.7, 602.0], [29.8, 602.0], [29.9, 602.0], [30.0, 604.0], [30.1, 604.0], [30.2, 604.0], [30.3, 604.0], [30.4, 604.0], [30.5, 604.0], [30.6, 604.0], [30.7, 604.0], [30.8, 604.0], [30.9, 604.0], [31.0, 604.0], [31.1, 604.0], [31.2, 604.0], [31.3, 604.0], [31.4, 604.0], [31.5, 604.0], [31.6, 604.0], [31.7, 604.0], [31.8, 604.0], [31.9, 604.0], [32.0, 605.0], [32.1, 605.0], [32.2, 605.0], [32.3, 605.0], [32.4, 605.0], [32.5, 605.0], [32.6, 605.0], [32.7, 605.0], [32.8, 605.0], [32.9, 605.0], [33.0, 605.0], [33.1, 605.0], [33.2, 605.0], [33.3, 605.0], [33.4, 605.0], [33.5, 605.0], [33.6, 605.0], [33.7, 605.0], [33.8, 605.0], [33.9, 605.0], [34.0, 605.0], [34.1, 605.0], [34.2, 605.0], [34.3, 605.0], [34.4, 605.0], [34.5, 606.0], [34.6, 606.0], [34.7, 606.0], [34.8, 606.0], [34.9, 606.0], [35.0, 606.0], [35.1, 606.0], [35.2, 606.0], [35.3, 606.0], [35.4, 606.0], [35.5, 606.0], [35.6, 606.0], [35.7, 606.0], [35.8, 606.0], [35.9, 606.0], [36.0, 606.0], [36.1, 606.0], [36.2, 606.0], [36.3, 606.0], [36.4, 606.0], [36.5, 607.0], [36.6, 607.0], [36.7, 607.0], [36.8, 607.0], [36.9, 607.0], [37.0, 607.0], [37.1, 607.0], [37.2, 607.0], [37.3, 607.0], [37.4, 607.0], [37.5, 607.0], [37.6, 607.0], [37.7, 607.0], [37.8, 607.0], [37.9, 607.0], [38.0, 608.0], [38.1, 608.0], [38.2, 608.0], [38.3, 608.0], [38.4, 608.0], [38.5, 608.0], [38.6, 608.0], [38.7, 608.0], [38.8, 608.0], [38.9, 608.0], [39.0, 608.0], [39.1, 608.0], [39.2, 608.0], [39.3, 608.0], [39.4, 608.0], [39.5, 610.0], [39.6, 610.0], [39.7, 610.0], [39.8, 610.0], [39.9, 610.0], [40.0, 611.0], [40.1, 611.0], [40.2, 611.0], [40.3, 611.0], [40.4, 611.0], [40.5, 611.0], [40.6, 611.0], [40.7, 611.0], [40.8, 611.0], [40.9, 611.0], [41.0, 612.0], [41.1, 612.0], [41.2, 612.0], [41.3, 612.0], [41.4, 612.0], [41.5, 612.0], [41.6, 612.0], [41.7, 612.0], [41.8, 612.0], [41.9, 612.0], [42.0, 612.0], [42.1, 612.0], [42.2, 612.0], [42.3, 612.0], [42.4, 612.0], [42.5, 613.0], [42.6, 613.0], [42.7, 613.0], [42.8, 613.0], [42.9, 613.0], [43.0, 614.0], [43.1, 614.0], [43.2, 614.0], [43.3, 614.0], [43.4, 614.0], [43.5, 614.0], [43.6, 614.0], [43.7, 614.0], [43.8, 614.0], [43.9, 614.0], [44.0, 614.0], [44.1, 614.0], [44.2, 614.0], [44.3, 614.0], [44.4, 614.0], [44.5, 614.0], [44.6, 614.0], [44.7, 614.0], [44.8, 614.0], [44.9, 614.0], [45.0, 614.0], [45.1, 614.0], [45.2, 614.0], [45.3, 614.0], [45.4, 614.0], [45.5, 615.0], [45.6, 615.0], [45.7, 615.0], [45.8, 615.0], [45.9, 615.0], [46.0, 616.0], [46.1, 616.0], [46.2, 616.0], [46.3, 616.0], [46.4, 616.0], [46.5, 617.0], [46.6, 617.0], [46.7, 617.0], [46.8, 617.0], [46.9, 617.0], [47.0, 617.0], [47.1, 617.0], [47.2, 617.0], [47.3, 617.0], [47.4, 617.0], [47.5, 617.0], [47.6, 617.0], [47.7, 617.0], [47.8, 617.0], [47.9, 617.0], [48.0, 617.0], [48.1, 617.0], [48.2, 617.0], [48.3, 617.0], [48.4, 617.0], [48.5, 618.0], [48.6, 618.0], [48.7, 618.0], [48.8, 618.0], [48.9, 618.0], [49.0, 620.0], [49.1, 620.0], [49.2, 620.0], [49.3, 620.0], [49.4, 620.0], [49.5, 620.0], [49.6, 620.0], [49.7, 620.0], [49.8, 620.0], [49.9, 620.0], [50.0, 620.0], [50.1, 620.0], [50.2, 620.0], [50.3, 620.0], [50.4, 620.0], [50.5, 622.0], [50.6, 622.0], [50.7, 622.0], [50.8, 622.0], [50.9, 622.0], [51.0, 622.0], [51.1, 622.0], [51.2, 622.0], [51.3, 622.0], [51.4, 622.0], [51.5, 622.0], [51.6, 622.0], [51.7, 622.0], [51.8, 622.0], [51.9, 622.0], [52.0, 624.0], [52.1, 624.0], [52.2, 624.0], [52.3, 624.0], [52.4, 624.0], [52.5, 625.0], [52.6, 625.0], [52.7, 625.0], [52.8, 625.0], [52.9, 625.0], [53.0, 626.0], [53.1, 626.0], [53.2, 626.0], [53.3, 626.0], [53.4, 626.0], [53.5, 626.0], [53.6, 626.0], [53.7, 626.0], [53.8, 626.0], [53.9, 626.0], [54.0, 626.0], [54.1, 626.0], [54.2, 626.0], [54.3, 626.0], [54.4, 626.0], [54.5, 627.0], [54.6, 627.0], [54.7, 627.0], [54.8, 627.0], [54.9, 627.0], [55.0, 627.0], [55.1, 627.0], [55.2, 627.0], [55.3, 627.0], [55.4, 627.0], [55.5, 627.0], [55.6, 627.0], [55.7, 627.0], [55.8, 627.0], [55.9, 627.0], [56.0, 628.0], [56.1, 628.0], [56.2, 628.0], [56.3, 628.0], [56.4, 628.0], [56.5, 630.0], [56.6, 630.0], [56.7, 630.0], [56.8, 630.0], [56.9, 630.0], [57.0, 631.0], [57.1, 631.0], [57.2, 631.0], [57.3, 631.0], [57.4, 631.0], [57.5, 632.0], [57.6, 632.0], [57.7, 632.0], [57.8, 632.0], [57.9, 632.0], [58.0, 632.0], [58.1, 632.0], [58.2, 632.0], [58.3, 632.0], [58.4, 632.0], [58.5, 633.0], [58.6, 633.0], [58.7, 633.0], [58.8, 633.0], [58.9, 633.0], [59.0, 633.0], [59.1, 633.0], [59.2, 633.0], [59.3, 633.0], [59.4, 633.0], [59.5, 633.0], [59.6, 633.0], [59.7, 633.0], [59.8, 633.0], [59.9, 633.0], [60.0, 633.0], [60.1, 633.0], [60.2, 633.0], [60.3, 633.0], [60.4, 633.0], [60.5, 634.0], [60.6, 634.0], [60.7, 634.0], [60.8, 634.0], [60.9, 634.0], [61.0, 634.0], [61.1, 634.0], [61.2, 634.0], [61.3, 634.0], [61.4, 634.0], [61.5, 635.0], [61.6, 635.0], [61.7, 635.0], [61.8, 635.0], [61.9, 635.0], [62.0, 636.0], [62.1, 636.0], [62.2, 636.0], [62.3, 636.0], [62.4, 636.0], [62.5, 640.0], [62.6, 640.0], [62.7, 640.0], [62.8, 640.0], [62.9, 640.0], [63.0, 640.0], [63.1, 640.0], [63.2, 640.0], [63.3, 640.0], [63.4, 640.0], [63.5, 641.0], [63.6, 641.0], [63.7, 641.0], [63.8, 641.0], [63.9, 641.0], [64.0, 643.0], [64.1, 643.0], [64.2, 643.0], [64.3, 643.0], [64.4, 643.0], [64.5, 644.0], [64.6, 644.0], [64.7, 644.0], [64.8, 644.0], [64.9, 644.0], [65.0, 646.0], [65.1, 646.0], [65.2, 646.0], [65.3, 646.0], [65.4, 646.0], [65.5, 649.0], [65.6, 649.0], [65.7, 649.0], [65.8, 649.0], [65.9, 649.0], [66.0, 650.0], [66.1, 650.0], [66.2, 650.0], [66.3, 650.0], [66.4, 650.0], [66.5, 650.0], [66.6, 650.0], [66.7, 650.0], [66.8, 650.0], [66.9, 650.0], [67.0, 654.0], [67.1, 654.0], [67.2, 654.0], [67.3, 654.0], [67.4, 654.0], [67.5, 656.0], [67.6, 656.0], [67.7, 656.0], [67.8, 656.0], [67.9, 656.0], [68.0, 658.0], [68.1, 658.0], [68.2, 658.0], [68.3, 658.0], [68.4, 658.0], [68.5, 668.0], [68.6, 668.0], [68.7, 668.0], [68.8, 668.0], [68.9, 668.0], [69.0, 669.0], [69.1, 669.0], [69.2, 669.0], [69.3, 669.0], [69.4, 669.0], [69.5, 672.0], [69.6, 672.0], [69.7, 672.0], [69.8, 672.0], [69.9, 672.0], [70.0, 679.0], [70.1, 679.0], [70.2, 679.0], [70.3, 679.0], [70.4, 679.0], [70.5, 679.0], [70.6, 679.0], [70.7, 679.0], [70.8, 679.0], [70.9, 679.0], [71.0, 681.0], [71.1, 681.0], [71.2, 681.0], [71.3, 681.0], [71.4, 681.0], [71.5, 686.0], [71.6, 686.0], [71.7, 686.0], [71.8, 686.0], [71.9, 686.0], [72.0, 689.0], [72.1, 689.0], [72.2, 689.0], [72.3, 689.0], [72.4, 689.0], [72.5, 690.0], [72.6, 690.0], [72.7, 690.0], [72.8, 690.0], [72.9, 690.0], [73.0, 691.0], [73.1, 691.0], [73.2, 691.0], [73.3, 691.0], [73.4, 691.0], [73.5, 697.0], [73.6, 697.0], [73.7, 697.0], [73.8, 697.0], [73.9, 697.0], [74.0, 697.0], [74.1, 697.0], [74.2, 697.0], [74.3, 697.0], [74.4, 697.0], [74.5, 697.0], [74.6, 697.0], [74.7, 697.0], [74.8, 697.0], [74.9, 697.0], [75.0, 697.0], [75.1, 697.0], [75.2, 697.0], [75.3, 697.0], [75.4, 697.0], [75.5, 698.0], [75.6, 698.0], [75.7, 698.0], [75.8, 698.0], [75.9, 698.0], [76.0, 699.0], [76.1, 699.0], [76.2, 699.0], [76.3, 699.0], [76.4, 699.0], [76.5, 702.0], [76.6, 702.0], [76.7, 702.0], [76.8, 702.0], [76.9, 702.0], [77.0, 705.0], [77.1, 705.0], [77.2, 705.0], [77.3, 705.0], [77.4, 705.0], [77.5, 708.0], [77.6, 708.0], [77.7, 708.0], [77.8, 708.0], [77.9, 708.0], [78.0, 709.0], [78.1, 709.0], [78.2, 709.0], [78.3, 709.0], [78.4, 709.0], [78.5, 710.0], [78.6, 710.0], [78.7, 710.0], [78.8, 710.0], [78.9, 710.0], [79.0, 710.0], [79.1, 710.0], [79.2, 710.0], [79.3, 710.0], [79.4, 710.0], [79.5, 715.0], [79.6, 715.0], [79.7, 715.0], [79.8, 715.0], [79.9, 715.0], [80.0, 715.0], [80.1, 715.0], [80.2, 715.0], [80.3, 715.0], [80.4, 715.0], [80.5, 716.0], [80.6, 716.0], [80.7, 716.0], [80.8, 716.0], [80.9, 716.0], [81.0, 716.0], [81.1, 716.0], [81.2, 716.0], [81.3, 716.0], [81.4, 716.0], [81.5, 717.0], [81.6, 717.0], [81.7, 717.0], [81.8, 717.0], [81.9, 717.0], [82.0, 719.0], [82.1, 719.0], [82.2, 719.0], [82.3, 719.0], [82.4, 719.0], [82.5, 720.0], [82.6, 720.0], [82.7, 720.0], [82.8, 720.0], [82.9, 720.0], [83.0, 725.0], [83.1, 725.0], [83.2, 725.0], [83.3, 725.0], [83.4, 725.0], [83.5, 727.0], [83.6, 727.0], [83.7, 727.0], [83.8, 727.0], [83.9, 727.0], [84.0, 734.0], [84.1, 734.0], [84.2, 734.0], [84.3, 734.0], [84.4, 734.0], [84.5, 735.0], [84.6, 735.0], [84.7, 735.0], [84.8, 735.0], [84.9, 735.0], [85.0, 736.0], [85.1, 736.0], [85.2, 736.0], [85.3, 736.0], [85.4, 736.0], [85.5, 740.0], [85.6, 740.0], [85.7, 740.0], [85.8, 740.0], [85.9, 740.0], [86.0, 740.0], [86.1, 740.0], [86.2, 740.0], [86.3, 740.0], [86.4, 740.0], [86.5, 744.0], [86.6, 744.0], [86.7, 744.0], [86.8, 744.0], [86.9, 744.0], [87.0, 744.0], [87.1, 744.0], [87.2, 744.0], [87.3, 744.0], [87.4, 744.0], [87.5, 748.0], [87.6, 748.0], [87.7, 748.0], [87.8, 748.0], [87.9, 748.0], [88.0, 749.0], [88.1, 749.0], [88.2, 749.0], [88.3, 749.0], [88.4, 749.0], [88.5, 751.0], [88.6, 751.0], [88.7, 751.0], [88.8, 751.0], [88.9, 751.0], [89.0, 753.0], [89.1, 753.0], [89.2, 753.0], [89.3, 753.0], [89.4, 753.0], [89.5, 755.0], [89.6, 755.0], [89.7, 755.0], [89.8, 755.0], [89.9, 755.0], [90.0, 756.0], [90.1, 756.0], [90.2, 756.0], [90.3, 756.0], [90.4, 756.0], [90.5, 757.0], [90.6, 757.0], [90.7, 757.0], [90.8, 757.0], [90.9, 757.0], [91.0, 758.0], [91.1, 758.0], [91.2, 758.0], [91.3, 758.0], [91.4, 758.0], [91.5, 759.0], [91.6, 759.0], [91.7, 759.0], [91.8, 759.0], [91.9, 759.0], [92.0, 762.0], [92.1, 762.0], [92.2, 762.0], [92.3, 762.0], [92.4, 762.0], [92.5, 766.0], [92.6, 766.0], [92.7, 766.0], [92.8, 766.0], [92.9, 766.0], [93.0, 767.0], [93.1, 767.0], [93.2, 767.0], [93.3, 767.0], [93.4, 767.0], [93.5, 768.0], [93.6, 768.0], [93.7, 768.0], [93.8, 768.0], [93.9, 768.0], [94.0, 777.0], [94.1, 777.0], [94.2, 777.0], [94.3, 777.0], [94.4, 777.0], [94.5, 778.0], [94.6, 778.0], [94.7, 778.0], [94.8, 778.0], [94.9, 778.0], [95.0, 788.0], [95.1, 788.0], [95.2, 788.0], [95.3, 788.0], [95.4, 788.0], [95.5, 799.0], [95.6, 799.0], [95.7, 799.0], [95.8, 799.0], [95.9, 799.0], [96.0, 812.0], [96.1, 812.0], [96.2, 812.0], [96.3, 812.0], [96.4, 812.0], [96.5, 833.0], [96.6, 833.0], [96.7, 833.0], [96.8, 833.0], [96.9, 833.0], [97.0, 844.0], [97.1, 844.0], [97.2, 844.0], [97.3, 844.0], [97.4, 844.0], [97.5, 845.0], [97.6, 845.0], [97.7, 845.0], [97.8, 845.0], [97.9, 845.0], [98.0, 851.0], [98.1, 851.0], [98.2, 851.0], [98.3, 851.0], [98.4, 851.0], [98.5, 852.0], [98.6, 852.0], [98.7, 852.0], [98.8, 852.0], [98.9, 852.0], [99.0, 875.0], [99.1, 875.0], [99.2, 875.0], [99.3, 875.0], [99.4, 875.0], [99.5, 1681.0], [99.6, 1681.0], [99.7, 1681.0], [99.8, 1681.0], [99.9, 1681.0]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[0.0, 470.0], [0.1, 470.0], [0.2, 470.0], [0.3, 470.0], [0.4, 470.0], [0.5, 504.0], [0.6, 504.0], [0.7, 504.0], [0.8, 504.0], [0.9, 504.0], [1.0, 505.0], [1.1, 505.0], [1.2, 505.0], [1.3, 505.0], [1.4, 505.0], [1.5, 505.0], [1.6, 505.0], [1.7, 505.0], [1.8, 505.0], [1.9, 505.0], [2.0, 506.0], [2.1, 506.0], [2.2, 506.0], [2.3, 506.0], [2.4, 506.0], [2.5, 509.0], [2.6, 509.0], [2.7, 509.0], [2.8, 509.0], [2.9, 509.0], [3.0, 509.0], [3.1, 509.0], [3.2, 509.0], [3.3, 509.0], [3.4, 509.0], [3.5, 511.0], [3.6, 511.0], [3.7, 511.0], [3.8, 511.0], [3.9, 511.0], [4.0, 512.0], [4.1, 512.0], [4.2, 512.0], [4.3, 512.0], [4.4, 512.0], [4.5, 516.0], [4.6, 516.0], [4.7, 516.0], [4.8, 516.0], [4.9, 516.0], [5.0, 519.0], [5.1, 519.0], [5.2, 519.0], [5.3, 519.0], [5.4, 519.0], [5.5, 521.0], [5.6, 521.0], [5.7, 521.0], [5.8, 521.0], [5.9, 521.0], [6.0, 523.0], [6.1, 523.0], [6.2, 523.0], [6.3, 523.0], [6.4, 523.0], [6.5, 523.0], [6.6, 523.0], [6.7, 523.0], [6.8, 523.0], [6.9, 523.0], [7.0, 523.0], [7.1, 523.0], [7.2, 523.0], [7.3, 523.0], [7.4, 523.0], [7.5, 523.0], [7.6, 523.0], [7.7, 523.0], [7.8, 523.0], [7.9, 523.0], [8.0, 528.0], [8.1, 528.0], [8.2, 528.0], [8.3, 528.0], [8.4, 528.0], [8.5, 529.0], [8.6, 529.0], [8.7, 529.0], [8.8, 529.0], [8.9, 529.0], [9.0, 530.0], [9.1, 530.0], [9.2, 530.0], [9.3, 530.0], [9.4, 530.0], [9.5, 531.0], [9.6, 531.0], [9.7, 531.0], [9.8, 531.0], [9.9, 531.0], [10.0, 532.0], [10.1, 532.0], [10.2, 532.0], [10.3, 532.0], [10.4, 532.0], [10.5, 541.0], [10.6, 541.0], [10.7, 541.0], [10.8, 541.0], [10.9, 541.0], [11.0, 542.0], [11.1, 542.0], [11.2, 542.0], [11.3, 542.0], [11.4, 542.0], [11.5, 543.0], [11.6, 543.0], [11.7, 543.0], [11.8, 543.0], [11.9, 543.0], [12.0, 543.0], [12.1, 543.0], [12.2, 543.0], [12.3, 543.0], [12.4, 543.0], [12.5, 544.0], [12.6, 544.0], [12.7, 544.0], [12.8, 544.0], [12.9, 544.0], [13.0, 549.0], [13.1, 549.0], [13.2, 549.0], [13.3, 549.0], [13.4, 549.0], [13.5, 550.0], [13.6, 550.0], [13.7, 550.0], [13.8, 550.0], [13.9, 550.0], [14.0, 551.0], [14.1, 551.0], [14.2, 551.0], [14.3, 551.0], [14.4, 551.0], [14.5, 552.0], [14.6, 552.0], [14.7, 552.0], [14.8, 552.0], [14.9, 552.0], [15.0, 555.0], [15.1, 555.0], [15.2, 555.0], [15.3, 555.0], [15.4, 555.0], [15.5, 555.0], [15.6, 555.0], [15.7, 555.0], [15.8, 555.0], [15.9, 555.0], [16.0, 557.0], [16.1, 557.0], [16.2, 557.0], [16.3, 557.0], [16.4, 557.0], [16.5, 557.0], [16.6, 557.0], [16.7, 557.0], [16.8, 557.0], [16.9, 557.0], [17.0, 558.0], [17.1, 558.0], [17.2, 558.0], [17.3, 558.0], [17.4, 558.0], [17.5, 561.0], [17.6, 561.0], [17.7, 561.0], [17.8, 561.0], [17.9, 561.0], [18.0, 562.0], [18.1, 562.0], [18.2, 562.0], [18.3, 562.0], [18.4, 562.0], [18.5, 563.0], [18.6, 563.0], [18.7, 563.0], [18.8, 563.0], [18.9, 563.0], [19.0, 563.0], [19.1, 563.0], [19.2, 563.0], [19.3, 563.0], [19.4, 563.0], [19.5, 564.0], [19.6, 564.0], [19.7, 564.0], [19.8, 564.0], [19.9, 564.0], [20.0, 570.0], [20.1, 570.0], [20.2, 570.0], [20.3, 570.0], [20.4, 570.0], [20.5, 572.0], [20.6, 572.0], [20.7, 572.0], [20.8, 572.0], [20.9, 572.0], [21.0, 572.0], [21.1, 572.0], [21.2, 572.0], [21.3, 572.0], [21.4, 572.0], [21.5, 575.0], [21.6, 575.0], [21.7, 575.0], [21.8, 575.0], [21.9, 575.0], [22.0, 575.0], [22.1, 575.0], [22.2, 575.0], [22.3, 575.0], [22.4, 575.0], [22.5, 575.0], [22.6, 575.0], [22.7, 575.0], [22.8, 575.0], [22.9, 575.0], [23.0, 575.0], [23.1, 575.0], [23.2, 575.0], [23.3, 575.0], [23.4, 575.0], [23.5, 576.0], [23.6, 576.0], [23.7, 576.0], [23.8, 576.0], [23.9, 576.0], [24.0, 578.0], [24.1, 578.0], [24.2, 578.0], [24.3, 578.0], [24.4, 578.0], [24.5, 578.0], [24.6, 578.0], [24.7, 578.0], [24.8, 578.0], [24.9, 578.0], [25.0, 579.0], [25.1, 579.0], [25.2, 579.0], [25.3, 579.0], [25.4, 579.0], [25.5, 581.0], [25.6, 581.0], [25.7, 581.0], [25.8, 581.0], [25.9, 581.0], [26.0, 581.0], [26.1, 581.0], [26.2, 581.0], [26.3, 581.0], [26.4, 581.0], [26.5, 582.0], [26.6, 582.0], [26.7, 582.0], [26.8, 582.0], [26.9, 582.0], [27.0, 582.0], [27.1, 582.0], [27.2, 582.0], [27.3, 582.0], [27.4, 582.0], [27.5, 582.0], [27.6, 582.0], [27.7, 582.0], [27.8, 582.0], [27.9, 582.0], [28.0, 584.0], [28.1, 584.0], [28.2, 584.0], [28.3, 584.0], [28.4, 584.0], [28.5, 584.0], [28.6, 584.0], [28.7, 584.0], [28.8, 584.0], [28.9, 584.0], [29.0, 585.0], [29.1, 585.0], [29.2, 585.0], [29.3, 585.0], [29.4, 585.0], [29.5, 586.0], [29.6, 586.0], [29.7, 586.0], [29.8, 586.0], [29.9, 586.0], [30.0, 587.0], [30.1, 587.0], [30.2, 587.0], [30.3, 587.0], [30.4, 587.0], [30.5, 588.0], [30.6, 588.0], [30.7, 588.0], [30.8, 588.0], [30.9, 588.0], [31.0, 589.0], [31.1, 589.0], [31.2, 589.0], [31.3, 589.0], [31.4, 589.0], [31.5, 591.0], [31.6, 591.0], [31.7, 591.0], [31.8, 591.0], [31.9, 591.0], [32.0, 592.0], [32.1, 592.0], [32.2, 592.0], [32.3, 592.0], [32.4, 592.0], [32.5, 592.0], [32.6, 592.0], [32.7, 592.0], [32.8, 592.0], [32.9, 592.0], [33.0, 593.0], [33.1, 593.0], [33.2, 593.0], [33.3, 593.0], [33.4, 593.0], [33.5, 596.0], [33.6, 596.0], [33.7, 596.0], [33.8, 596.0], [33.9, 596.0], [34.0, 596.0], [34.1, 596.0], [34.2, 596.0], [34.3, 596.0], [34.4, 596.0], [34.5, 598.0], [34.6, 598.0], [34.7, 598.0], [34.8, 598.0], [34.9, 598.0], [35.0, 602.0], [35.1, 602.0], [35.2, 602.0], [35.3, 602.0], [35.4, 602.0], [35.5, 602.0], [35.6, 602.0], [35.7, 602.0], [35.8, 602.0], [35.9, 602.0], [36.0, 603.0], [36.1, 603.0], [36.2, 603.0], [36.3, 603.0], [36.4, 603.0], [36.5, 604.0], [36.6, 604.0], [36.7, 604.0], [36.8, 604.0], [36.9, 604.0], [37.0, 604.0], [37.1, 604.0], [37.2, 604.0], [37.3, 604.0], [37.4, 604.0], [37.5, 606.0], [37.6, 606.0], [37.7, 606.0], [37.8, 606.0], [37.9, 606.0], [38.0, 606.0], [38.1, 606.0], [38.2, 606.0], [38.3, 606.0], [38.4, 606.0], [38.5, 607.0], [38.6, 607.0], [38.7, 607.0], [38.8, 607.0], [38.9, 607.0], [39.0, 608.0], [39.1, 608.0], [39.2, 608.0], [39.3, 608.0], [39.4, 608.0], [39.5, 609.0], [39.6, 609.0], [39.7, 609.0], [39.8, 609.0], [39.9, 609.0], [40.0, 609.0], [40.1, 609.0], [40.2, 609.0], [40.3, 609.0], [40.4, 609.0], [40.5, 613.0], [40.6, 613.0], [40.7, 613.0], [40.8, 613.0], [40.9, 613.0], [41.0, 615.0], [41.1, 615.0], [41.2, 615.0], [41.3, 615.0], [41.4, 615.0], [41.5, 617.0], [41.6, 617.0], [41.7, 617.0], [41.8, 617.0], [41.9, 617.0], [42.0, 617.0], [42.1, 617.0], [42.2, 617.0], [42.3, 617.0], [42.4, 617.0], [42.5, 620.0], [42.6, 620.0], [42.7, 620.0], [42.8, 620.0], [42.9, 620.0], [43.0, 621.0], [43.1, 621.0], [43.2, 621.0], [43.3, 621.0], [43.4, 621.0], [43.5, 622.0], [43.6, 622.0], [43.7, 622.0], [43.8, 622.0], [43.9, 622.0], [44.0, 630.0], [44.1, 630.0], [44.2, 630.0], [44.3, 630.0], [44.4, 630.0], [44.5, 631.0], [44.6, 631.0], [44.7, 631.0], [44.8, 631.0], [44.9, 631.0], [45.0, 633.0], [45.1, 633.0], [45.2, 633.0], [45.3, 633.0], [45.4, 633.0], [45.5, 636.0], [45.6, 636.0], [45.7, 636.0], [45.8, 636.0], [45.9, 636.0], [46.0, 637.0], [46.1, 637.0], [46.2, 637.0], [46.3, 637.0], [46.4, 637.0], [46.5, 639.0], [46.6, 639.0], [46.7, 639.0], [46.8, 639.0], [46.9, 639.0], [47.0, 639.0], [47.1, 639.0], [47.2, 639.0], [47.3, 639.0], [47.4, 639.0], [47.5, 641.0], [47.6, 641.0], [47.7, 641.0], [47.8, 641.0], [47.9, 641.0], [48.0, 641.0], [48.1, 641.0], [48.2, 641.0], [48.3, 641.0], [48.4, 641.0], [48.5, 642.0], [48.6, 642.0], [48.7, 642.0], [48.8, 642.0], [48.9, 642.0], [49.0, 644.0], [49.1, 644.0], [49.2, 644.0], [49.3, 644.0], [49.4, 644.0], [49.5, 646.0], [49.6, 646.0], [49.7, 646.0], [49.8, 646.0], [49.9, 646.0], [50.0, 646.0], [50.1, 646.0], [50.2, 646.0], [50.3, 646.0], [50.4, 646.0], [50.5, 648.0], [50.6, 648.0], [50.7, 648.0], [50.8, 648.0], [50.9, 648.0], [51.0, 649.0], [51.1, 649.0], [51.2, 649.0], [51.3, 649.0], [51.4, 649.0], [51.5, 650.0], [51.6, 650.0], [51.7, 650.0], [51.8, 650.0], [51.9, 650.0], [52.0, 654.0], [52.1, 654.0], [52.2, 654.0], [52.3, 654.0], [52.4, 654.0], [52.5, 655.0], [52.6, 655.0], [52.7, 655.0], [52.8, 655.0], [52.9, 655.0], [53.0, 656.0], [53.1, 656.0], [53.2, 656.0], [53.3, 656.0], [53.4, 656.0], [53.5, 657.0], [53.6, 657.0], [53.7, 657.0], [53.8, 657.0], [53.9, 657.0], [54.0, 657.0], [54.1, 657.0], [54.2, 657.0], [54.3, 657.0], [54.4, 657.0], [54.5, 658.0], [54.6, 658.0], [54.7, 658.0], [54.8, 658.0], [54.9, 658.0], [55.0, 663.0], [55.1, 663.0], [55.2, 663.0], [55.3, 663.0], [55.4, 663.0], [55.5, 663.0], [55.6, 663.0], [55.7, 663.0], [55.8, 663.0], [55.9, 663.0], [56.0, 666.0], [56.1, 666.0], [56.2, 666.0], [56.3, 666.0], [56.4, 666.0], [56.5, 666.0], [56.6, 666.0], [56.7, 666.0], [56.8, 666.0], [56.9, 666.0], [57.0, 668.0], [57.1, 668.0], [57.2, 668.0], [57.3, 668.0], [57.4, 668.0], [57.5, 669.0], [57.6, 669.0], [57.7, 669.0], [57.8, 669.0], [57.9, 669.0], [58.0, 670.0], [58.1, 670.0], [58.2, 670.0], [58.3, 670.0], [58.4, 670.0], [58.5, 672.0], [58.6, 672.0], [58.7, 672.0], [58.8, 672.0], [58.9, 672.0], [59.0, 674.0], [59.1, 674.0], [59.2, 674.0], [59.3, 674.0], [59.4, 674.0], [59.5, 674.0], [59.6, 674.0], [59.7, 674.0], [59.8, 674.0], [59.9, 674.0], [60.0, 675.0], [60.1, 675.0], [60.2, 675.0], [60.3, 675.0], [60.4, 675.0], [60.5, 676.0], [60.6, 676.0], [60.7, 676.0], [60.8, 676.0], [60.9, 676.0], [61.0, 676.0], [61.1, 676.0], [61.2, 676.0], [61.3, 676.0], [61.4, 676.0], [61.5, 679.0], [61.6, 679.0], [61.7, 679.0], [61.8, 679.0], [61.9, 679.0], [62.0, 681.0], [62.1, 681.0], [62.2, 681.0], [62.3, 681.0], [62.4, 681.0], [62.5, 681.0], [62.6, 681.0], [62.7, 681.0], [62.8, 681.0], [62.9, 681.0], [63.0, 682.0], [63.1, 682.0], [63.2, 682.0], [63.3, 682.0], [63.4, 682.0], [63.5, 682.0], [63.6, 682.0], [63.7, 682.0], [63.8, 682.0], [63.9, 682.0], [64.0, 683.0], [64.1, 683.0], [64.2, 683.0], [64.3, 683.0], [64.4, 683.0], [64.5, 684.0], [64.6, 684.0], [64.7, 684.0], [64.8, 684.0], [64.9, 684.0], [65.0, 686.0], [65.1, 686.0], [65.2, 686.0], [65.3, 686.0], [65.4, 686.0], [65.5, 687.0], [65.6, 687.0], [65.7, 687.0], [65.8, 687.0], [65.9, 687.0], [66.0, 689.0], [66.1, 689.0], [66.2, 689.0], [66.3, 689.0], [66.4, 689.0], [66.5, 689.0], [66.6, 689.0], [66.7, 689.0], [66.8, 689.0], [66.9, 689.0], [67.0, 690.0], [67.1, 690.0], [67.2, 690.0], [67.3, 690.0], [67.4, 690.0], [67.5, 692.0], [67.6, 692.0], [67.7, 692.0], [67.8, 692.0], [67.9, 692.0], [68.0, 693.0], [68.1, 693.0], [68.2, 693.0], [68.3, 693.0], [68.4, 693.0], [68.5, 694.0], [68.6, 694.0], [68.7, 694.0], [68.8, 694.0], [68.9, 694.0], [69.0, 695.0], [69.1, 695.0], [69.2, 695.0], [69.3, 695.0], [69.4, 695.0], [69.5, 696.0], [69.6, 696.0], [69.7, 696.0], [69.8, 696.0], [69.9, 696.0], [70.0, 699.0], [70.1, 699.0], [70.2, 699.0], [70.3, 699.0], [70.4, 699.0], [70.5, 699.0], [70.6, 699.0], [70.7, 699.0], [70.8, 699.0], [70.9, 699.0], [71.0, 700.0], [71.1, 700.0], [71.2, 700.0], [71.3, 700.0], [71.4, 700.0], [71.5, 703.0], [71.6, 703.0], [71.7, 703.0], [71.8, 703.0], [71.9, 703.0], [72.0, 703.0], [72.1, 703.0], [72.2, 703.0], [72.3, 703.0], [72.4, 703.0], [72.5, 705.0], [72.6, 705.0], [72.7, 705.0], [72.8, 705.0], [72.9, 705.0], [73.0, 705.0], [73.1, 705.0], [73.2, 705.0], [73.3, 705.0], [73.4, 705.0], [73.5, 710.0], [73.6, 710.0], [73.7, 710.0], [73.8, 710.0], [73.9, 710.0], [74.0, 712.0], [74.1, 712.0], [74.2, 712.0], [74.3, 712.0], [74.4, 712.0], [74.5, 712.0], [74.6, 712.0], [74.7, 712.0], [74.8, 712.0], [74.9, 712.0], [75.0, 719.0], [75.1, 719.0], [75.2, 719.0], [75.3, 719.0], [75.4, 719.0], [75.5, 723.0], [75.6, 723.0], [75.7, 723.0], [75.8, 723.0], [75.9, 723.0], [76.0, 725.0], [76.1, 725.0], [76.2, 725.0], [76.3, 725.0], [76.4, 725.0], [76.5, 729.0], [76.6, 729.0], [76.7, 729.0], [76.8, 729.0], [76.9, 729.0], [77.0, 732.0], [77.1, 732.0], [77.2, 732.0], [77.3, 732.0], [77.4, 732.0], [77.5, 732.0], [77.6, 732.0], [77.7, 732.0], [77.8, 732.0], [77.9, 732.0], [78.0, 737.0], [78.1, 737.0], [78.2, 737.0], [78.3, 737.0], [78.4, 737.0], [78.5, 737.0], [78.6, 737.0], [78.7, 737.0], [78.8, 737.0], [78.9, 737.0], [79.0, 737.0], [79.1, 737.0], [79.2, 737.0], [79.3, 737.0], [79.4, 737.0], [79.5, 738.0], [79.6, 738.0], [79.7, 738.0], [79.8, 738.0], [79.9, 738.0], [80.0, 738.0], [80.1, 738.0], [80.2, 738.0], [80.3, 738.0], [80.4, 738.0], [80.5, 739.0], [80.6, 739.0], [80.7, 739.0], [80.8, 739.0], [80.9, 739.0], [81.0, 746.0], [81.1, 746.0], [81.2, 746.0], [81.3, 746.0], [81.4, 746.0], [81.5, 747.0], [81.6, 747.0], [81.7, 747.0], [81.8, 747.0], [81.9, 747.0], [82.0, 750.0], [82.1, 750.0], [82.2, 750.0], [82.3, 750.0], [82.4, 750.0], [82.5, 751.0], [82.6, 751.0], [82.7, 751.0], [82.8, 751.0], [82.9, 751.0], [83.0, 752.0], [83.1, 752.0], [83.2, 752.0], [83.3, 752.0], [83.4, 752.0], [83.5, 760.0], [83.6, 760.0], [83.7, 760.0], [83.8, 760.0], [83.9, 760.0], [84.0, 760.0], [84.1, 760.0], [84.2, 760.0], [84.3, 760.0], [84.4, 760.0], [84.5, 765.0], [84.6, 765.0], [84.7, 765.0], [84.8, 765.0], [84.9, 765.0], [85.0, 789.0], [85.1, 789.0], [85.2, 789.0], [85.3, 789.0], [85.4, 789.0], [85.5, 809.0], [85.6, 809.0], [85.7, 809.0], [85.8, 809.0], [85.9, 809.0], [86.0, 818.0], [86.1, 818.0], [86.2, 818.0], [86.3, 818.0], [86.4, 818.0], [86.5, 819.0], [86.6, 819.0], [86.7, 819.0], [86.8, 819.0], [86.9, 819.0], [87.0, 825.0], [87.1, 825.0], [87.2, 825.0], [87.3, 825.0], [87.4, 825.0], [87.5, 828.0], [87.6, 828.0], [87.7, 828.0], [87.8, 828.0], [87.9, 828.0], [88.0, 831.0], [88.1, 831.0], [88.2, 831.0], [88.3, 831.0], [88.4, 831.0], [88.5, 831.0], [88.6, 831.0], [88.7, 831.0], [88.8, 831.0], [88.9, 831.0], [89.0, 832.0], [89.1, 832.0], [89.2, 832.0], [89.3, 832.0], [89.4, 832.0], [89.5, 833.0], [89.6, 833.0], [89.7, 833.0], [89.8, 833.0], [89.9, 833.0], [90.0, 836.0], [90.1, 836.0], [90.2, 836.0], [90.3, 836.0], [90.4, 836.0], [90.5, 837.0], [90.6, 837.0], [90.7, 837.0], [90.8, 837.0], [90.9, 837.0], [91.0, 837.0], [91.1, 837.0], [91.2, 837.0], [91.3, 837.0], [91.4, 837.0], [91.5, 838.0], [91.6, 838.0], [91.7, 838.0], [91.8, 838.0], [91.9, 838.0], [92.0, 851.0], [92.1, 851.0], [92.2, 851.0], [92.3, 851.0], [92.4, 851.0], [92.5, 852.0], [92.6, 852.0], [92.7, 852.0], [92.8, 852.0], [92.9, 852.0], [93.0, 855.0], [93.1, 855.0], [93.2, 855.0], [93.3, 855.0], [93.4, 855.0], [93.5, 859.0], [93.6, 859.0], [93.7, 859.0], [93.8, 859.0], [93.9, 859.0], [94.0, 935.0], [94.1, 935.0], [94.2, 935.0], [94.3, 935.0], [94.4, 935.0], [94.5, 976.0], [94.6, 976.0], [94.7, 976.0], [94.8, 976.0], [94.9, 976.0], [95.0, 1011.0], [95.1, 1011.0], [95.2, 1011.0], [95.3, 1011.0], [95.4, 1011.0], [95.5, 1022.0], [95.6, 1022.0], [95.7, 1022.0], [95.8, 1022.0], [95.9, 1022.0], [96.0, 1022.0], [96.1, 1022.0], [96.2, 1022.0], [96.3, 1022.0], [96.4, 1022.0], [96.5, 1042.0], [96.6, 1042.0], [96.7, 1042.0], [96.8, 1042.0], [96.9, 1042.0], [97.0, 1045.0], [97.1, 1045.0], [97.2, 1045.0], [97.3, 1045.0], [97.4, 1045.0], [97.5, 1048.0], [97.6, 1048.0], [97.7, 1048.0], [97.8, 1048.0], [97.9, 1048.0], [98.0, 1065.0], [98.1, 1065.0], [98.2, 1065.0], [98.3, 1065.0], [98.4, 1065.0], [98.5, 1075.0], [98.6, 1075.0], [98.7, 1075.0], [98.8, 1075.0], [98.9, 1075.0], [99.0, 1084.0], [99.1, 1084.0], [99.2, 1084.0], [99.3, 1084.0], [99.4, 1084.0], [99.5, 1089.0], [99.6, 1089.0], [99.7, 1089.0], [99.8, 1089.0], [99.9, 1089.0]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[0.0, 442.0], [0.1, 442.0], [0.2, 442.0], [0.3, 442.0], [0.4, 442.0], [0.5, 444.0], [0.6, 444.0], [0.7, 444.0], [0.8, 444.0], [0.9, 444.0], [1.0, 445.0], [1.1, 445.0], [1.2, 445.0], [1.3, 445.0], [1.4, 445.0], [1.5, 473.0], [1.6, 473.0], [1.7, 473.0], [1.8, 473.0], [1.9, 473.0], [2.0, 477.0], [2.1, 477.0], [2.2, 477.0], [2.3, 477.0], [2.4, 477.0], [2.5, 480.0], [2.6, 480.0], [2.7, 480.0], [2.8, 480.0], [2.9, 480.0], [3.0, 481.0], [3.1, 481.0], [3.2, 481.0], [3.3, 481.0], [3.4, 481.0], [3.5, 505.0], [3.6, 505.0], [3.7, 505.0], [3.8, 505.0], [3.9, 505.0], [4.0, 505.0], [4.1, 505.0], [4.2, 505.0], [4.3, 505.0], [4.4, 505.0], [4.5, 506.0], [4.6, 506.0], [4.7, 506.0], [4.8, 506.0], [4.9, 506.0], [5.0, 507.0], [5.1, 507.0], [5.2, 507.0], [5.3, 507.0], [5.4, 507.0], [5.5, 507.0], [5.6, 507.0], [5.7, 507.0], [5.8, 507.0], [5.9, 507.0], [6.0, 509.0], [6.1, 509.0], [6.2, 509.0], [6.3, 509.0], [6.4, 509.0], [6.5, 510.0], [6.6, 510.0], [6.7, 510.0], [6.8, 510.0], [6.9, 510.0], [7.0, 510.0], [7.1, 510.0], [7.2, 510.0], [7.3, 510.0], [7.4, 510.0], [7.5, 511.0], [7.6, 511.0], [7.7, 511.0], [7.8, 511.0], [7.9, 511.0], [8.0, 511.0], [8.1, 511.0], [8.2, 511.0], [8.3, 511.0], [8.4, 511.0], [8.5, 512.0], [8.6, 512.0], [8.7, 512.0], [8.8, 512.0], [8.9, 512.0], [9.0, 513.0], [9.1, 513.0], [9.2, 513.0], [9.3, 513.0], [9.4, 513.0], [9.5, 514.0], [9.6, 514.0], [9.7, 514.0], [9.8, 514.0], [9.9, 514.0], [10.0, 514.0], [10.1, 514.0], [10.2, 514.0], [10.3, 514.0], [10.4, 514.0], [10.5, 515.0], [10.6, 515.0], [10.7, 515.0], [10.8, 515.0], [10.9, 515.0], [11.0, 515.0], [11.1, 515.0], [11.2, 515.0], [11.3, 515.0], [11.4, 515.0], [11.5, 517.0], [11.6, 517.0], [11.7, 517.0], [11.8, 517.0], [11.9, 517.0], [12.0, 518.0], [12.1, 518.0], [12.2, 518.0], [12.3, 518.0], [12.4, 518.0], [12.5, 520.0], [12.6, 520.0], [12.7, 520.0], [12.8, 520.0], [12.9, 520.0], [13.0, 526.0], [13.1, 526.0], [13.2, 526.0], [13.3, 526.0], [13.4, 526.0], [13.5, 526.0], [13.6, 526.0], [13.7, 526.0], [13.8, 526.0], [13.9, 526.0], [14.0, 527.0], [14.1, 527.0], [14.2, 527.0], [14.3, 527.0], [14.4, 527.0], [14.5, 527.0], [14.6, 527.0], [14.7, 527.0], [14.8, 527.0], [14.9, 527.0], [15.0, 528.0], [15.1, 528.0], [15.2, 528.0], [15.3, 528.0], [15.4, 528.0], [15.5, 529.0], [15.6, 529.0], [15.7, 529.0], [15.8, 529.0], [15.9, 529.0], [16.0, 529.0], [16.1, 529.0], [16.2, 529.0], [16.3, 529.0], [16.4, 529.0], [16.5, 529.0], [16.6, 529.0], [16.7, 529.0], [16.8, 529.0], [16.9, 529.0], [17.0, 530.0], [17.1, 530.0], [17.2, 530.0], [17.3, 530.0], [17.4, 530.0], [17.5, 533.0], [17.6, 533.0], [17.7, 533.0], [17.8, 533.0], [17.9, 533.0], [18.0, 534.0], [18.1, 534.0], [18.2, 534.0], [18.3, 534.0], [18.4, 534.0], [18.5, 534.0], [18.6, 534.0], [18.7, 534.0], [18.8, 534.0], [18.9, 534.0], [19.0, 534.0], [19.1, 534.0], [19.2, 534.0], [19.3, 534.0], [19.4, 534.0], [19.5, 535.0], [19.6, 535.0], [19.7, 535.0], [19.8, 535.0], [19.9, 535.0], [20.0, 535.0], [20.1, 535.0], [20.2, 535.0], [20.3, 535.0], [20.4, 535.0], [20.5, 535.0], [20.6, 535.0], [20.7, 535.0], [20.8, 535.0], [20.9, 535.0], [21.0, 536.0], [21.1, 536.0], [21.2, 536.0], [21.3, 536.0], [21.4, 536.0], [21.5, 537.0], [21.6, 537.0], [21.7, 537.0], [21.8, 537.0], [21.9, 537.0], [22.0, 539.0], [22.1, 539.0], [22.2, 539.0], [22.3, 539.0], [22.4, 539.0], [22.5, 541.0], [22.6, 541.0], [22.7, 541.0], [22.8, 541.0], [22.9, 541.0], [23.0, 543.0], [23.1, 543.0], [23.2, 543.0], [23.3, 543.0], [23.4, 543.0], [23.5, 547.0], [23.6, 547.0], [23.7, 547.0], [23.8, 547.0], [23.9, 547.0], [24.0, 552.0], [24.1, 552.0], [24.2, 552.0], [24.3, 552.0], [24.4, 552.0], [24.5, 552.0], [24.6, 552.0], [24.7, 552.0], [24.8, 552.0], [24.9, 552.0], [25.0, 555.0], [25.1, 555.0], [25.2, 555.0], [25.3, 555.0], [25.4, 555.0], [25.5, 557.0], [25.6, 557.0], [25.7, 557.0], [25.8, 557.0], [25.9, 557.0], [26.0, 558.0], [26.1, 558.0], [26.2, 558.0], [26.3, 558.0], [26.4, 558.0], [26.5, 559.0], [26.6, 559.0], [26.7, 559.0], [26.8, 559.0], [26.9, 559.0], [27.0, 559.0], [27.1, 559.0], [27.2, 559.0], [27.3, 559.0], [27.4, 559.0], [27.5, 559.0], [27.6, 559.0], [27.7, 559.0], [27.8, 559.0], [27.9, 559.0], [28.0, 561.0], [28.1, 561.0], [28.2, 561.0], [28.3, 561.0], [28.4, 561.0], [28.5, 563.0], [28.6, 563.0], [28.7, 563.0], [28.8, 563.0], [28.9, 563.0], [29.0, 569.0], [29.1, 569.0], [29.2, 569.0], [29.3, 569.0], [29.4, 569.0], [29.5, 571.0], [29.6, 571.0], [29.7, 571.0], [29.8, 571.0], [29.9, 571.0], [30.0, 575.0], [30.1, 575.0], [30.2, 575.0], [30.3, 575.0], [30.4, 575.0], [30.5, 575.0], [30.6, 575.0], [30.7, 575.0], [30.8, 575.0], [30.9, 575.0], [31.0, 578.0], [31.1, 578.0], [31.2, 578.0], [31.3, 578.0], [31.4, 578.0], [31.5, 578.0], [31.6, 578.0], [31.7, 578.0], [31.8, 578.0], [31.9, 578.0], [32.0, 579.0], [32.1, 579.0], [32.2, 579.0], [32.3, 579.0], [32.4, 579.0], [32.5, 580.0], [32.6, 580.0], [32.7, 580.0], [32.8, 580.0], [32.9, 580.0], [33.0, 580.0], [33.1, 580.0], [33.2, 580.0], [33.3, 580.0], [33.4, 580.0], [33.5, 588.0], [33.6, 588.0], [33.7, 588.0], [33.8, 588.0], [33.9, 588.0], [34.0, 589.0], [34.1, 589.0], [34.2, 589.0], [34.3, 589.0], [34.4, 589.0], [34.5, 591.0], [34.6, 591.0], [34.7, 591.0], [34.8, 591.0], [34.9, 591.0], [35.0, 591.0], [35.1, 591.0], [35.2, 591.0], [35.3, 591.0], [35.4, 591.0], [35.5, 591.0], [35.6, 591.0], [35.7, 591.0], [35.8, 591.0], [35.9, 591.0], [36.0, 592.0], [36.1, 592.0], [36.2, 592.0], [36.3, 592.0], [36.4, 592.0], [36.5, 594.0], [36.6, 594.0], [36.7, 594.0], [36.8, 594.0], [36.9, 594.0], [37.0, 599.0], [37.1, 599.0], [37.2, 599.0], [37.3, 599.0], [37.4, 599.0], [37.5, 603.0], [37.6, 603.0], [37.7, 603.0], [37.8, 603.0], [37.9, 603.0], [38.0, 604.0], [38.1, 604.0], [38.2, 604.0], [38.3, 604.0], [38.4, 604.0], [38.5, 606.0], [38.6, 606.0], [38.7, 606.0], [38.8, 606.0], [38.9, 606.0], [39.0, 607.0], [39.1, 607.0], [39.2, 607.0], [39.3, 607.0], [39.4, 607.0], [39.5, 607.0], [39.6, 607.0], [39.7, 607.0], [39.8, 607.0], [39.9, 607.0], [40.0, 607.0], [40.1, 607.0], [40.2, 607.0], [40.3, 607.0], [40.4, 607.0], [40.5, 612.0], [40.6, 612.0], [40.7, 612.0], [40.8, 612.0], [40.9, 612.0], [41.0, 613.0], [41.1, 613.0], [41.2, 613.0], [41.3, 613.0], [41.4, 613.0], [41.5, 616.0], [41.6, 616.0], [41.7, 616.0], [41.8, 616.0], [41.9, 616.0], [42.0, 617.0], [42.1, 617.0], [42.2, 617.0], [42.3, 617.0], [42.4, 617.0], [42.5, 617.0], [42.6, 617.0], [42.7, 617.0], [42.8, 617.0], [42.9, 617.0], [43.0, 618.0], [43.1, 618.0], [43.2, 618.0], [43.3, 618.0], [43.4, 618.0], [43.5, 620.0], [43.6, 620.0], [43.7, 620.0], [43.8, 620.0], [43.9, 620.0], [44.0, 620.0], [44.1, 620.0], [44.2, 620.0], [44.3, 620.0], [44.4, 620.0], [44.5, 621.0], [44.6, 621.0], [44.7, 621.0], [44.8, 621.0], [44.9, 621.0], [45.0, 621.0], [45.1, 621.0], [45.2, 621.0], [45.3, 621.0], [45.4, 621.0], [45.5, 622.0], [45.6, 622.0], [45.7, 622.0], [45.8, 622.0], [45.9, 622.0], [46.0, 626.0], [46.1, 626.0], [46.2, 626.0], [46.3, 626.0], [46.4, 626.0], [46.5, 626.0], [46.6, 626.0], [46.7, 626.0], [46.8, 626.0], [46.9, 626.0], [47.0, 628.0], [47.1, 628.0], [47.2, 628.0], [47.3, 628.0], [47.4, 628.0], [47.5, 629.0], [47.6, 629.0], [47.7, 629.0], [47.8, 629.0], [47.9, 629.0], [48.0, 629.0], [48.1, 629.0], [48.2, 629.0], [48.3, 629.0], [48.4, 629.0], [48.5, 630.0], [48.6, 630.0], [48.7, 630.0], [48.8, 630.0], [48.9, 630.0], [49.0, 635.0], [49.1, 635.0], [49.2, 635.0], [49.3, 635.0], [49.4, 635.0], [49.5, 636.0], [49.6, 636.0], [49.7, 636.0], [49.8, 636.0], [49.9, 636.0], [50.0, 637.0], [50.1, 637.0], [50.2, 637.0], [50.3, 637.0], [50.4, 637.0], [50.5, 640.0], [50.6, 640.0], [50.7, 640.0], [50.8, 640.0], [50.9, 640.0], [51.0, 646.0], [51.1, 646.0], [51.2, 646.0], [51.3, 646.0], [51.4, 646.0], [51.5, 647.0], [51.6, 647.0], [51.7, 647.0], [51.8, 647.0], [51.9, 647.0], [52.0, 647.0], [52.1, 647.0], [52.2, 647.0], [52.3, 647.0], [52.4, 647.0], [52.5, 648.0], [52.6, 648.0], [52.7, 648.0], [52.8, 648.0], [52.9, 648.0], [53.0, 649.0], [53.1, 649.0], [53.2, 649.0], [53.3, 649.0], [53.4, 649.0], [53.5, 651.0], [53.6, 651.0], [53.7, 651.0], [53.8, 651.0], [53.9, 651.0], [54.0, 653.0], [54.1, 653.0], [54.2, 653.0], [54.3, 653.0], [54.4, 653.0], [54.5, 653.0], [54.6, 653.0], [54.7, 653.0], [54.8, 653.0], [54.9, 653.0], [55.0, 654.0], [55.1, 654.0], [55.2, 654.0], [55.3, 654.0], [55.4, 654.0], [55.5, 656.0], [55.6, 656.0], [55.7, 656.0], [55.8, 656.0], [55.9, 656.0], [56.0, 656.0], [56.1, 656.0], [56.2, 656.0], [56.3, 656.0], [56.4, 656.0], [56.5, 657.0], [56.6, 657.0], [56.7, 657.0], [56.8, 657.0], [56.9, 657.0], [57.0, 657.0], [57.1, 657.0], [57.2, 657.0], [57.3, 657.0], [57.4, 657.0], [57.5, 658.0], [57.6, 658.0], [57.7, 658.0], [57.8, 658.0], [57.9, 658.0], [58.0, 662.0], [58.1, 662.0], [58.2, 662.0], [58.3, 662.0], [58.4, 662.0], [58.5, 668.0], [58.6, 668.0], [58.7, 668.0], [58.8, 668.0], [58.9, 668.0], [59.0, 669.0], [59.1, 669.0], [59.2, 669.0], [59.3, 669.0], [59.4, 669.0], [59.5, 670.0], [59.6, 670.0], [59.7, 670.0], [59.8, 670.0], [59.9, 670.0], [60.0, 672.0], [60.1, 672.0], [60.2, 672.0], [60.3, 672.0], [60.4, 672.0], [60.5, 672.0], [60.6, 672.0], [60.7, 672.0], [60.8, 672.0], [60.9, 672.0], [61.0, 674.0], [61.1, 674.0], [61.2, 674.0], [61.3, 674.0], [61.4, 674.0], [61.5, 674.0], [61.6, 674.0], [61.7, 674.0], [61.8, 674.0], [61.9, 674.0], [62.0, 674.0], [62.1, 674.0], [62.2, 674.0], [62.3, 674.0], [62.4, 674.0], [62.5, 674.0], [62.6, 674.0], [62.7, 674.0], [62.8, 674.0], [62.9, 674.0], [63.0, 676.0], [63.1, 676.0], [63.2, 676.0], [63.3, 676.0], [63.4, 676.0], [63.5, 677.0], [63.6, 677.0], [63.7, 677.0], [63.8, 677.0], [63.9, 677.0], [64.0, 678.0], [64.1, 678.0], [64.2, 678.0], [64.3, 678.0], [64.4, 678.0], [64.5, 680.0], [64.6, 680.0], [64.7, 680.0], [64.8, 680.0], [64.9, 680.0], [65.0, 682.0], [65.1, 682.0], [65.2, 682.0], [65.3, 682.0], [65.4, 682.0], [65.5, 682.0], [65.6, 682.0], [65.7, 682.0], [65.8, 682.0], [65.9, 682.0], [66.0, 682.0], [66.1, 682.0], [66.2, 682.0], [66.3, 682.0], [66.4, 682.0], [66.5, 686.0], [66.6, 686.0], [66.7, 686.0], [66.8, 686.0], [66.9, 686.0], [67.0, 687.0], [67.1, 687.0], [67.2, 687.0], [67.3, 687.0], [67.4, 687.0], [67.5, 688.0], [67.6, 688.0], [67.7, 688.0], [67.8, 688.0], [67.9, 688.0], [68.0, 692.0], [68.1, 692.0], [68.2, 692.0], [68.3, 692.0], [68.4, 692.0], [68.5, 693.0], [68.6, 693.0], [68.7, 693.0], [68.8, 693.0], [68.9, 693.0], [69.0, 693.0], [69.1, 693.0], [69.2, 693.0], [69.3, 693.0], [69.4, 693.0], [69.5, 695.0], [69.6, 695.0], [69.7, 695.0], [69.8, 695.0], [69.9, 695.0], [70.0, 696.0], [70.1, 696.0], [70.2, 696.0], [70.3, 696.0], [70.4, 696.0], [70.5, 696.0], [70.6, 696.0], [70.7, 696.0], [70.8, 696.0], [70.9, 696.0], [71.0, 697.0], [71.1, 697.0], [71.2, 697.0], [71.3, 697.0], [71.4, 697.0], [71.5, 699.0], [71.6, 699.0], [71.7, 699.0], [71.8, 699.0], [71.9, 699.0], [72.0, 701.0], [72.1, 701.0], [72.2, 701.0], [72.3, 701.0], [72.4, 701.0], [72.5, 702.0], [72.6, 702.0], [72.7, 702.0], [72.8, 702.0], [72.9, 702.0], [73.0, 703.0], [73.1, 703.0], [73.2, 703.0], [73.3, 703.0], [73.4, 703.0], [73.5, 704.0], [73.6, 704.0], [73.7, 704.0], [73.8, 704.0], [73.9, 704.0], [74.0, 706.0], [74.1, 706.0], [74.2, 706.0], [74.3, 706.0], [74.4, 706.0], [74.5, 707.0], [74.6, 707.0], [74.7, 707.0], [74.8, 707.0], [74.9, 707.0], [75.0, 708.0], [75.1, 708.0], [75.2, 708.0], [75.3, 708.0], [75.4, 708.0], [75.5, 710.0], [75.6, 710.0], [75.7, 710.0], [75.8, 710.0], [75.9, 710.0], [76.0, 711.0], [76.1, 711.0], [76.2, 711.0], [76.3, 711.0], [76.4, 711.0], [76.5, 713.0], [76.6, 713.0], [76.7, 713.0], [76.8, 713.0], [76.9, 713.0], [77.0, 713.0], [77.1, 713.0], [77.2, 713.0], [77.3, 713.0], [77.4, 713.0], [77.5, 713.0], [77.6, 713.0], [77.7, 713.0], [77.8, 713.0], [77.9, 713.0], [78.0, 719.0], [78.1, 719.0], [78.2, 719.0], [78.3, 719.0], [78.4, 719.0], [78.5, 723.0], [78.6, 723.0], [78.7, 723.0], [78.8, 723.0], [78.9, 723.0], [79.0, 726.0], [79.1, 726.0], [79.2, 726.0], [79.3, 726.0], [79.4, 726.0], [79.5, 727.0], [79.6, 727.0], [79.7, 727.0], [79.8, 727.0], [79.9, 727.0], [80.0, 728.0], [80.1, 728.0], [80.2, 728.0], [80.3, 728.0], [80.4, 728.0], [80.5, 730.0], [80.6, 730.0], [80.7, 730.0], [80.8, 730.0], [80.9, 730.0], [81.0, 731.0], [81.1, 731.0], [81.2, 731.0], [81.3, 731.0], [81.4, 731.0], [81.5, 733.0], [81.6, 733.0], [81.7, 733.0], [81.8, 733.0], [81.9, 733.0], [82.0, 734.0], [82.1, 734.0], [82.2, 734.0], [82.3, 734.0], [82.4, 734.0], [82.5, 735.0], [82.6, 735.0], [82.7, 735.0], [82.8, 735.0], [82.9, 735.0], [83.0, 735.0], [83.1, 735.0], [83.2, 735.0], [83.3, 735.0], [83.4, 735.0], [83.5, 736.0], [83.6, 736.0], [83.7, 736.0], [83.8, 736.0], [83.9, 736.0], [84.0, 737.0], [84.1, 737.0], [84.2, 737.0], [84.3, 737.0], [84.4, 737.0], [84.5, 738.0], [84.6, 738.0], [84.7, 738.0], [84.8, 738.0], [84.9, 738.0], [85.0, 738.0], [85.1, 738.0], [85.2, 738.0], [85.3, 738.0], [85.4, 738.0], [85.5, 738.0], [85.6, 738.0], [85.7, 738.0], [85.8, 738.0], [85.9, 738.0], [86.0, 738.0], [86.1, 738.0], [86.2, 738.0], [86.3, 738.0], [86.4, 738.0], [86.5, 739.0], [86.6, 739.0], [86.7, 739.0], [86.8, 739.0], [86.9, 739.0], [87.0, 739.0], [87.1, 739.0], [87.2, 739.0], [87.3, 739.0], [87.4, 739.0], [87.5, 740.0], [87.6, 740.0], [87.7, 740.0], [87.8, 740.0], [87.9, 740.0], [88.0, 741.0], [88.1, 741.0], [88.2, 741.0], [88.3, 741.0], [88.4, 741.0], [88.5, 742.0], [88.6, 742.0], [88.7, 742.0], [88.8, 742.0], [88.9, 742.0], [89.0, 743.0], [89.1, 743.0], [89.2, 743.0], [89.3, 743.0], [89.4, 743.0], [89.5, 743.0], [89.6, 743.0], [89.7, 743.0], [89.8, 743.0], [89.9, 743.0], [90.0, 744.0], [90.1, 744.0], [90.2, 744.0], [90.3, 744.0], [90.4, 744.0], [90.5, 746.0], [90.6, 746.0], [90.7, 746.0], [90.8, 746.0], [90.9, 746.0], [91.0, 746.0], [91.1, 746.0], [91.2, 746.0], [91.3, 746.0], [91.4, 746.0], [91.5, 747.0], [91.6, 747.0], [91.7, 747.0], [91.8, 747.0], [91.9, 747.0], [92.0, 747.0], [92.1, 747.0], [92.2, 747.0], [92.3, 747.0], [92.4, 747.0], [92.5, 747.0], [92.6, 747.0], [92.7, 747.0], [92.8, 747.0], [92.9, 747.0], [93.0, 748.0], [93.1, 748.0], [93.2, 748.0], [93.3, 748.0], [93.4, 748.0], [93.5, 750.0], [93.6, 750.0], [93.7, 750.0], [93.8, 750.0], [93.9, 750.0], [94.0, 751.0], [94.1, 751.0], [94.2, 751.0], [94.3, 751.0], [94.4, 751.0], [94.5, 753.0], [94.6, 753.0], [94.7, 753.0], [94.8, 753.0], [94.9, 753.0], [95.0, 757.0], [95.1, 757.0], [95.2, 757.0], [95.3, 757.0], [95.4, 757.0], [95.5, 769.0], [95.6, 769.0], [95.7, 769.0], [95.8, 769.0], [95.9, 769.0], [96.0, 771.0], [96.1, 771.0], [96.2, 771.0], [96.3, 771.0], [96.4, 771.0], [96.5, 773.0], [96.6, 773.0], [96.7, 773.0], [96.8, 773.0], [96.9, 773.0], [97.0, 798.0], [97.1, 798.0], [97.2, 798.0], [97.3, 798.0], [97.4, 798.0], [97.5, 813.0], [97.6, 813.0], [97.7, 813.0], [97.8, 813.0], [97.9, 813.0], [98.0, 826.0], [98.1, 826.0], [98.2, 826.0], [98.3, 826.0], [98.4, 826.0], [98.5, 833.0], [98.6, 833.0], [98.7, 833.0], [98.8, 833.0], [98.9, 833.0], [99.0, 842.0], [99.1, 842.0], [99.2, 842.0], [99.3, 842.0], [99.4, 842.0], [99.5, 858.0], [99.6, 858.0], [99.7, 858.0], [99.8, 858.0], [99.9, 858.0]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 400.0, "maxY": 97.0, "series": [{"data": [[900.0, 8.0], [1000.0, 4.0], [1100.0, 4.0], [1200.0, 21.0], [1300.0, 4.0], [1400.0, 1.0], [1500.0, 1.0], [1600.0, 1.0], [1700.0, 11.0], [1800.0, 4.0], [1900.0, 4.0], [2000.0, 15.0], [2100.0, 8.0], [2900.0, 2.0], [3200.0, 1.0], [3300.0, 2.0], [3500.0, 2.0], [3600.0, 1.0], [3700.0, 1.0], [3800.0, 3.0], [3900.0, 2.0], [4000.0, 3.0], [4300.0, 1.0], [4100.0, 7.0], [4200.0, 1.0], [4400.0, 3.0], [4600.0, 3.0], [4500.0, 2.0], [4700.0, 2.0], [4800.0, 2.0], [5000.0, 2.0], [4900.0, 3.0], [5100.0, 1.0], [5300.0, 3.0], [5200.0, 2.0], [5600.0, 2.0], [5500.0, 2.0], [5700.0, 2.0], [5800.0, 1.0], [6100.0, 2.0], [5900.0, 5.0], [6000.0, 2.0], [6300.0, 2.0], [6200.0, 2.0], [6400.0, 2.0], [6600.0, 3.0], [6500.0, 2.0], [6700.0, 3.0], [6800.0, 2.0], [7100.0, 2.0], [7000.0, 2.0], [7400.0, 3.0], [7200.0, 2.0], [7300.0, 1.0], [7600.0, 9.0], [7500.0, 3.0], [7900.0, 2.0], [7800.0, 1.0], [8000.0, 3.0], [8100.0, 2.0], [8200.0, 1.0], [8300.0, 1.0], [8400.0, 1.0]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[600.0, 97.0], [700.0, 39.0], [400.0, 8.0], [800.0, 7.0], [1600.0, 1.0], [500.0, 48.0]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[600.0, 72.0], [700.0, 29.0], [800.0, 17.0], [400.0, 1.0], [900.0, 2.0], [500.0, 69.0], [1000.0, 10.0]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[600.0, 69.0], [700.0, 51.0], [800.0, 5.0], [400.0, 7.0], [500.0, 68.0]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 8400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 16.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 626.0, "series": [{"data": [[0.0, 16.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 626.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 158.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 148.78874999999996, "minX": 1.64900418E12, "maxY": 148.78874999999996, "series": [{"data": [[1.64900418E12, 148.78874999999996]], "isOverall": false, "label": "Reqresapi", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64900418E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 440.0, "minX": 2.0, "maxY": 7167.0, "series": [{"data": [[131.0, 1208.0], [129.0, 926.5], [159.0, 5679.196721311476], [172.0, 5270.5], [174.0, 6143.625], [175.0, 4829.5], [176.0, 3486.0], [178.0, 1542.6666666666667], [179.0, 3685.0], [180.0, 4074.406249999999], [185.0, 7167.0], [187.0, 4166.125], [189.0, 1500.0], [191.0, 1272.2222222222224], [186.0, 987.0], [197.0, 1651.0625], [200.0, 1205.111111111111], [52.0, 4126.0], [106.0, 1963.6666666666667], [104.0, 1036.0], [127.0, 984.5]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[171.86, 3997.175000000004]], "isOverall": false, "label": "HTTP Request-Get-Aggregated", "isController": false}, {"data": [[2.0, 461.0], [4.0, 456.0], [6.0, 458.0], [7.0, 554.0], [8.0, 545.0], [10.0, 605.0], [11.0, 698.0], [12.0, 697.0], [13.0, 681.0], [14.0, 697.0], [16.0, 693.5], [18.0, 711.0], [19.0, 705.0], [21.0, 710.0], [23.0, 512.0], [24.0, 542.0], [26.0, 505.0], [27.0, 503.5], [30.0, 571.0], [31.0, 558.0], [33.0, 593.5], [35.0, 620.0], [34.0, 625.0], [37.0, 616.0], [36.0, 629.5], [39.0, 637.0], [41.0, 611.0], [40.0, 614.0], [42.0, 640.0], [45.0, 628.0], [44.0, 634.5], [47.0, 634.0], [46.0, 644.0], [49.0, 640.0], [48.0, 654.0], [51.0, 649.0], [50.0, 1681.0], [52.0, 440.0], [55.0, 612.0], [54.0, 614.5], [57.0, 610.0], [56.0, 612.0], [58.0, 611.0], [62.0, 602.5], [66.0, 603.0], [64.0, 624.5], [71.0, 614.0], [70.0, 612.6666666666666], [68.0, 603.5], [79.0, 602.3333333333334], [83.0, 615.6666666666666], [81.0, 620.0], [80.0, 581.0], [87.0, 627.0], [86.0, 606.0], [85.0, 614.3333333333334], [91.0, 626.0], [90.0, 623.0], [88.0, 617.0], [95.0, 632.0], [94.0, 656.0], [93.0, 596.0], [98.0, 622.6666666666666], [96.0, 642.5], [103.0, 617.0], [101.0, 643.0], [100.0, 617.0], [107.0, 633.0], [106.0, 614.0], [104.0, 606.0], [110.0, 606.0], [109.0, 608.0], [108.0, 630.0], [115.0, 555.0], [114.0, 564.0], [113.0, 557.0], [118.0, 564.0], [117.0, 551.5], [122.0, 600.0], [120.0, 583.0], [127.0, 528.5], [125.0, 553.6666666666666], [133.0, 863.5], [130.0, 626.0], [129.0, 597.0], [128.0, 650.0], [143.0, 525.0], [142.0, 518.0], [141.0, 536.0], [140.0, 543.0], [138.0, 833.0], [137.0, 831.5], [136.0, 844.5], [151.0, 521.0], [150.0, 523.0], [149.0, 527.0], [148.0, 492.0], [146.0, 510.0], [145.0, 544.0], [144.0, 516.0], [159.0, 689.0], [158.0, 762.0], [157.0, 502.0], [156.0, 512.0], [155.0, 510.0], [154.0, 522.5], [153.0, 519.0], [167.0, 715.5], [166.0, 757.0], [165.0, 735.0], [163.0, 744.0], [162.0, 748.0], [161.0, 766.0], [160.0, 744.0], [175.0, 729.6666666666666], [173.0, 740.0], [171.0, 756.0], [170.0, 763.0], [168.0, 778.0], [183.0, 636.0], [182.0, 679.0], [181.0, 729.5], [180.0, 716.0], [178.0, 709.0], [177.0, 756.5], [191.0, 724.0], [189.0, 668.0], [188.0, 669.0], [187.0, 672.0], [186.0, 699.0], [185.0, 767.0], [184.0, 768.0], [198.0, 752.0], [197.0, 755.0], [195.0, 697.0], [194.0, 687.5], [193.0, 691.0], [200.0, 727.5]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[101.88500000000005, 637.5449999999997]], "isOverall": false, "label": "HTTP Request-Delete-Aggregated", "isController": false}, {"data": [[41.0, 669.0], [49.0, 644.0], [48.0, 655.0], [51.0, 789.0], [50.0, 646.0], [52.0, 605.5], [55.0, 613.0], [94.0, 624.0], [103.0, 636.0], [100.0, 622.0], [104.0, 642.5], [108.0, 630.0], [115.0, 555.0], [131.0, 846.3333333333334], [129.0, 591.3333333333334], [139.0, 542.0], [137.0, 828.0], [151.0, 532.0], [146.0, 509.0], [145.0, 505.0], [144.0, 505.0], [158.0, 571.0], [157.0, 523.0], [171.0, 725.0], [176.0, 552.0], [179.0, 525.75], [180.0, 628.6857142857142], [183.0, 637.0], [181.0, 588.0], [187.0, 700.0], [189.0, 888.9000000000001], [190.0, 899.2222222222222], [191.0, 780.9032258064516], [185.0, 633.0], [193.0, 688.3333333333334], [197.0, 624.7750000000002], [200.0, 697.5], [24.0, 512.0], [27.0, 470.0]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[170.38499999999993, 668.3050000000001]], "isOverall": false, "label": "HTTP Request-Post-Aggregated", "isController": false}, {"data": [[10.0, 657.0], [11.0, 699.0], [16.0, 711.5], [19.0, 688.0], [21.0, 578.0], [24.0, 498.0], [26.0, 476.6666666666667], [31.0, 558.0], [32.0, 561.0], [42.0, 647.0], [47.0, 651.0], [46.0, 635.0], [49.0, 638.0], [48.0, 646.0], [51.0, 545.5], [52.0, 588.6666666666666], [57.0, 577.9999999999999], [58.0, 599.6666666666666], [80.0, 607.0], [87.0, 604.0], [86.0, 616.5], [88.0, 616.5], [94.0, 618.0], [93.0, 626.0], [98.0, 620.0], [101.0, 637.0], [106.0, 629.0], [109.0, 622.0], [115.0, 552.0], [134.0, 842.0], [133.0, 819.5], [131.0, 858.0], [130.0, 798.0], [151.0, 529.0], [150.0, 525.0], [149.0, 536.3333333333334], [158.0, 577.75], [157.0, 515.8750000000001], [156.0, 505.0], [155.0, 519.0], [154.0, 527.0], [152.0, 529.0], [166.0, 719.0], [168.0, 726.0], [183.0, 593.5], [181.0, 582.3333333333333], [191.0, 715.5833333333333], [188.0, 645.5], [187.0, 672.0], [186.0, 628.5], [185.0, 637.0], [184.0, 682.0], [193.0, 678.25], [197.0, 546.7272727272727], [200.0, 694.52]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}, {"data": [[151.02499999999998, 633.9999999999999]], "isOverall": false, "label": "HTTP Request-Put-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2670.0, "minX": 1.64900418E12, "maxY": 14846.6, "series": [{"data": [[1.64900418E12, 14846.6]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.64900418E12, 2670.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64900418E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 633.9999999999999, "minX": 1.64900418E12, "maxY": 3997.175000000004, "series": [{"data": [[1.64900418E12, 3997.175000000004]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[1.64900418E12, 637.5449999999997]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[1.64900418E12, 668.3050000000001]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[1.64900418E12, 633.9999999999999]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64900418E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64900418E12, "maxY": 3993.3150000000005, "series": [{"data": [[1.64900418E12, 3993.3150000000005]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[1.64900418E12, 0.0]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[1.64900418E12, 668.2650000000001]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[1.64900418E12, 633.9550000000003]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64900418E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.64900418E12, "maxY": 3314.444999999999, "series": [{"data": [[1.64900418E12, 3314.444999999999]], "isOverall": false, "label": "HTTP Request-Get", "isController": false}, {"data": [[1.64900418E12, 0.0]], "isOverall": false, "label": "HTTP Request-Delete", "isController": false}, {"data": [[1.64900418E12, 0.0]], "isOverall": false, "label": "HTTP Request-Post", "isController": false}, {"data": [[1.64900418E12, 0.0]], "isOverall": false, "label": "HTTP Request-Put", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64900418E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 440.0, "minX": 1.64900418E12, "maxY": 8412.0, "series": [{"data": [[1.64900418E12, 8412.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.64900418E12, 4735.399999999999]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.64900418E12, 8016.71]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.64900418E12, 6650.749999999998]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.64900418E12, 440.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.64900418E12, 682.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64900418E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 612.5, "minX": 27.0, "maxY": 4181.0, "series": [{"data": [[130.0, 612.5], [145.0, 4181.0], [27.0, 697.0], [247.0, 636.0], [251.0, 738.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 251.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 27.0, "maxY": 4142.0, "series": [{"data": [[130.0, 0.0], [145.0, 4142.0], [27.0, 0.0], [247.0, 526.0], [251.0, 738.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 251.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.7, "minX": 1.64900412E12, "maxY": 12.633333333333333, "series": [{"data": [[1.64900418E12, 12.633333333333333], [1.64900412E12, 0.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64900418E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64900418E12, "maxY": 6.666666666666667, "series": [{"data": [[1.64900418E12, 6.666666666666667]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "204", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.64900418E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 3.3333333333333335, "minX": 1.64900418E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-Get-success", "isController": false}, {"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-Post-success", "isController": false}, {"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-Delete-success", "isController": false}, {"data": [[1.64900418E12, 3.3333333333333335]], "isOverall": false, "label": "HTTP Request-Put-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64900418E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 13.333333333333334, "minX": 1.64900418E12, "maxY": 13.333333333333334, "series": [{"data": [[1.64900418E12, 13.333333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.64900418E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

